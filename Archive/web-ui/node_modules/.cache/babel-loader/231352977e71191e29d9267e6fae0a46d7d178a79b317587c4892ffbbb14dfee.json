{"ast":null,"code":"import * as React from 'react';\nimport { fastObjectShallowCompare } from '@mui/x-internals/fastObjectShallowCompare';\nimport { warnOnce } from '@mui/x-internals/warning';\nimport { useLazyRef } from \"./useLazyRef.js\";\nimport { useOnMount } from \"./useOnMount.js\";\nfunction isOutputSelector(selector) {\n  return selector.acceptsApiRef;\n}\n// TODO v8: Remove this function\nfunction applySelector(apiRef, selector) {\n  if (isOutputSelector(selector)) {\n    return selector(apiRef);\n  }\n  return selector(apiRef.current.state);\n}\n\n// TODO v8: Rename this function to `applySelector`\nfunction applySelectorV8(apiRef, selector, args, instanceId) {\n  if (isOutputSelector(selector)) {\n    return selector(apiRef, args);\n  }\n  return selector(apiRef.current.state, instanceId);\n}\nconst defaultCompare = Object.is;\nexport const objectShallowCompare = fastObjectShallowCompare;\nconst arrayShallowCompare = (a, b) => {\n  if (a === b) {\n    return true;\n  }\n  return a.length === b.length && a.every((v, i) => v === b[i]);\n};\nexport const argsEqual = (prev, curr) => {\n  let fn = Object.is;\n  if (curr instanceof Array) {\n    fn = arrayShallowCompare;\n  } else if (curr instanceof Object) {\n    fn = objectShallowCompare;\n  }\n  return fn(prev, curr);\n};\nconst createRefs = () => ({\n  state: null,\n  equals: null,\n  selector: null,\n  args: null\n});\n\n// TODO v8: Remove this function\nexport const useGridSelector = function (apiRef, selector) {\n  let equals = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultCompare;\n  if (process.env.NODE_ENV !== 'production') {\n    if (!apiRef.current.state) {\n      warnOnce(['MUI X: `useGridSelector` has been called before the initialization of the state.', 'This hook can only be used inside the context of the grid.']);\n    }\n  }\n  const refs = useLazyRef(createRefs);\n  const didInit = refs.current.selector !== null;\n  const [state, setState] = React.useState(\n  // We don't use an initialization function to avoid allocations\n  didInit ? null : applySelector(apiRef, selector));\n  refs.current.state = state;\n  refs.current.equals = equals;\n  refs.current.selector = selector;\n  useOnMount(() => {\n    return apiRef.current.store.subscribe(() => {\n      const newState = applySelector(apiRef, refs.current.selector);\n      if (!refs.current.equals(refs.current.state, newState)) {\n        refs.current.state = newState;\n        setState(newState);\n      }\n    });\n  });\n  return state;\n};\n\n// TODO v8: Rename this function to `useGridSelector`\nexport const useGridSelectorV8 = function (apiRef, selector) {\n  let args = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n  let equals = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : defaultCompare;\n  if (process.env.NODE_ENV !== 'production') {\n    if (!apiRef.current.state) {\n      warnOnce(['MUI X: `useGridSelector` has been called before the initialization of the state.', 'This hook can only be used inside the context of the grid.']);\n    }\n  }\n  const refs = useLazyRef(createRefs);\n  const didInit = refs.current.selector !== null;\n  const [state, setState] = React.useState(\n  // We don't use an initialization function to avoid allocations\n  didInit ? null : applySelectorV8(apiRef, selector, args, apiRef.current.instanceId));\n  refs.current.state = state;\n  refs.current.equals = equals;\n  refs.current.selector = selector;\n  const prevArgs = refs.current.args;\n  refs.current.args = args;\n  if (didInit && !argsEqual(prevArgs, args)) {\n    const newState = applySelectorV8(apiRef, refs.current.selector, refs.current.args, apiRef.current.instanceId);\n    if (!refs.current.equals(refs.current.state, newState)) {\n      refs.current.state = newState;\n      setState(newState);\n    }\n  }\n  useOnMount(() => {\n    return apiRef.current.store.subscribe(() => {\n      const newState = applySelectorV8(apiRef, refs.current.selector, refs.current.args, apiRef.current.instanceId);\n      if (!refs.current.equals(refs.current.state, newState)) {\n        refs.current.state = newState;\n        setState(newState);\n      }\n    });\n  });\n  return state;\n};","map":{"version":3,"names":["React","fastObjectShallowCompare","warnOnce","useLazyRef","useOnMount","isOutputSelector","selector","acceptsApiRef","applySelector","apiRef","current","state","applySelectorV8","args","instanceId","defaultCompare","Object","is","objectShallowCompare","arrayShallowCompare","a","b","length","every","v","i","argsEqual","prev","curr","fn","Array","createRefs","equals","useGridSelector","arguments","undefined","process","env","NODE_ENV","refs","didInit","setState","useState","store","subscribe","newState","useGridSelectorV8","prevArgs"],"sources":["C:/Users/jpitt/VSCode/faustus-price-checker/web-ui/node_modules/@mui/x-data-grid/hooks/utils/useGridSelector.js"],"sourcesContent":["import * as React from 'react';\nimport { fastObjectShallowCompare } from '@mui/x-internals/fastObjectShallowCompare';\nimport { warnOnce } from '@mui/x-internals/warning';\nimport { useLazyRef } from \"./useLazyRef.js\";\nimport { useOnMount } from \"./useOnMount.js\";\nfunction isOutputSelector(selector) {\n  return selector.acceptsApiRef;\n}\n// TODO v8: Remove this function\nfunction applySelector(apiRef, selector) {\n  if (isOutputSelector(selector)) {\n    return selector(apiRef);\n  }\n  return selector(apiRef.current.state);\n}\n\n// TODO v8: Rename this function to `applySelector`\nfunction applySelectorV8(apiRef, selector, args, instanceId) {\n  if (isOutputSelector(selector)) {\n    return selector(apiRef, args);\n  }\n  return selector(apiRef.current.state, instanceId);\n}\nconst defaultCompare = Object.is;\nexport const objectShallowCompare = fastObjectShallowCompare;\nconst arrayShallowCompare = (a, b) => {\n  if (a === b) {\n    return true;\n  }\n  return a.length === b.length && a.every((v, i) => v === b[i]);\n};\nexport const argsEqual = (prev, curr) => {\n  let fn = Object.is;\n  if (curr instanceof Array) {\n    fn = arrayShallowCompare;\n  } else if (curr instanceof Object) {\n    fn = objectShallowCompare;\n  }\n  return fn(prev, curr);\n};\nconst createRefs = () => ({\n  state: null,\n  equals: null,\n  selector: null,\n  args: null\n});\n\n// TODO v8: Remove this function\nexport const useGridSelector = (apiRef, selector, equals = defaultCompare) => {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!apiRef.current.state) {\n      warnOnce(['MUI X: `useGridSelector` has been called before the initialization of the state.', 'This hook can only be used inside the context of the grid.']);\n    }\n  }\n  const refs = useLazyRef(createRefs);\n  const didInit = refs.current.selector !== null;\n  const [state, setState] = React.useState(\n  // We don't use an initialization function to avoid allocations\n  didInit ? null : applySelector(apiRef, selector));\n  refs.current.state = state;\n  refs.current.equals = equals;\n  refs.current.selector = selector;\n  useOnMount(() => {\n    return apiRef.current.store.subscribe(() => {\n      const newState = applySelector(apiRef, refs.current.selector);\n      if (!refs.current.equals(refs.current.state, newState)) {\n        refs.current.state = newState;\n        setState(newState);\n      }\n    });\n  });\n  return state;\n};\n\n// TODO v8: Rename this function to `useGridSelector`\nexport const useGridSelectorV8 = (apiRef, selector, args = undefined, equals = defaultCompare) => {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!apiRef.current.state) {\n      warnOnce(['MUI X: `useGridSelector` has been called before the initialization of the state.', 'This hook can only be used inside the context of the grid.']);\n    }\n  }\n  const refs = useLazyRef(createRefs);\n  const didInit = refs.current.selector !== null;\n  const [state, setState] = React.useState(\n  // We don't use an initialization function to avoid allocations\n  didInit ? null : applySelectorV8(apiRef, selector, args, apiRef.current.instanceId));\n  refs.current.state = state;\n  refs.current.equals = equals;\n  refs.current.selector = selector;\n  const prevArgs = refs.current.args;\n  refs.current.args = args;\n  if (didInit && !argsEqual(prevArgs, args)) {\n    const newState = applySelectorV8(apiRef, refs.current.selector, refs.current.args, apiRef.current.instanceId);\n    if (!refs.current.equals(refs.current.state, newState)) {\n      refs.current.state = newState;\n      setState(newState);\n    }\n  }\n  useOnMount(() => {\n    return apiRef.current.store.subscribe(() => {\n      const newState = applySelectorV8(apiRef, refs.current.selector, refs.current.args, apiRef.current.instanceId);\n      if (!refs.current.equals(refs.current.state, newState)) {\n        refs.current.state = newState;\n        setState(newState);\n      }\n    });\n  });\n  return state;\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}