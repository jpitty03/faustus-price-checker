{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import AppBar from\"@mui/material/AppBar\";import Toolbar from\"@mui/material/Toolbar\";import Typography from\"@mui/material/Typography\";import{Box,CircularProgress,Chip}from\"@mui/material\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function HeaderBar(){const[divineOrbPrice,setDivineOrbPrice]=useState(null);const[isActive,setIsActive]=useState(false);const[loading,setLoading]=useState(true);useEffect(()=>{const checkSiteStatus=async()=>{try{const response=await fetch(\"/faustus-price-checker/currencyOverview.json\");const data=await response.json();// Extract created date\nconst createdDate=data.created?new Date(data.created):null;// Extract Divine Orb price from JSON\nconst divineOrb=data.lines.find(line=>line.currencyTypeName===\"Divine Orb\");const price=divineOrb?divineOrb.chaosEquivalent:\"N/A\";setDivineOrbPrice(price);// Convert created date to PST\nconst createdDatePST=createdDate?new Date(createdDate.toLocaleString(\"en-US\",{timeZone:\"America/Los_Angeles\"})):null;// Determine if the site is active (within last 10 minutes)\nconst now=new Date();const tenMinutesAgo=new Date(now.getTime()-10*60*1000);setIsActive(createdDatePST>tenMinutesAgo);setLoading(false);}catch(error){console.error(\"Error checking site status:\",error);setLoading(false);}};checkSiteStatus();// Poll every 15 seconds\nconst intervalId=setInterval(checkSiteStatus,15000);// Cleanup on unmount\nreturn()=>clearInterval(intervalId);},[]);return/*#__PURE__*/_jsx(AppBar,{position:\"static\",children:/*#__PURE__*/_jsxs(Toolbar,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",sx:{flexGrow:1},children:\"Faustus Price Checker\"}),loading?/*#__PURE__*/_jsx(CircularProgress,{color:\"inherit\",size:24}):/*#__PURE__*/_jsxs(_Fragment,{children:[divineOrbPrice&&/*#__PURE__*/_jsx(Box,{sx:{marginRight:2},children:/*#__PURE__*/_jsxs(Typography,{variant:\"body1\",children:[\"Divine Orb Price: \",divineOrbPrice,\" Chaos Orbs\"]})}),/*#__PURE__*/_jsx(Chip,{label:isActive?\"Active\":\"Inactive\",color:isActive?\"success\":\"error\",sx:{fontWeight:\"bold\"}})]})]})});}export default HeaderBar;","map":{"version":3,"names":["React","useEffect","useState","AppBar","Toolbar","Typography","Box","CircularProgress","Chip","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","HeaderBar","divineOrbPrice","setDivineOrbPrice","isActive","setIsActive","loading","setLoading","checkSiteStatus","response","fetch","data","json","createdDate","created","Date","divineOrb","lines","find","line","currencyTypeName","price","chaosEquivalent","createdDatePST","toLocaleString","timeZone","now","tenMinutesAgo","getTime","error","console","intervalId","setInterval","clearInterval","position","children","variant","sx","flexGrow","color","size","marginRight","label","fontWeight"],"sources":["C:/Users/jpitt/VSCode/faustus-price-checker/web-ui/src/components/HeaderBar.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { Box, CircularProgress, Chip } from \"@mui/material\";\r\n\r\nfunction HeaderBar() {\r\n  const [divineOrbPrice, setDivineOrbPrice] = useState(null);\r\n  const [isActive, setIsActive] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const checkSiteStatus = async () => {\r\n      try {\r\n        const response = await fetch(\"/faustus-price-checker/currencyOverview.json\");\r\n        const data = await response.json();\r\n\r\n        // Extract created date\r\n        const createdDate = data.created ? new Date(data.created) : null;\r\n\r\n        // Extract Divine Orb price from JSON\r\n        const divineOrb = data.lines.find(\r\n          (line) => line.currencyTypeName === \"Divine Orb\"\r\n        );\r\n        const price = divineOrb ? divineOrb.chaosEquivalent : \"N/A\";\r\n        setDivineOrbPrice(price);\r\n\r\n        // Convert created date to PST\r\n        const createdDatePST = createdDate\r\n          ? new Date(createdDate.toLocaleString(\"en-US\", { timeZone: \"America/Los_Angeles\" }))\r\n          : null;\r\n\r\n        // Determine if the site is active (within last 10 minutes)\r\n        const now = new Date();\r\n        const tenMinutesAgo = new Date(now.getTime() - 10 * 60 * 1000);\r\n        setIsActive(createdDatePST > tenMinutesAgo);\r\n\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error(\"Error checking site status:\", error);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    checkSiteStatus();\r\n\r\n    // Poll every 15 seconds\r\n    const intervalId = setInterval(checkSiteStatus, 15000);\r\n\r\n    // Cleanup on unmount\r\n    return () => clearInterval(intervalId);\r\n  }, []);\r\n\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Toolbar>\r\n        <Typography variant=\"h6\" sx={{ flexGrow: 1 }}>\r\n          Faustus Price Checker\r\n        </Typography>\r\n\r\n        {loading ? (\r\n          <CircularProgress color=\"inherit\" size={24} />\r\n        ) : (\r\n          <>\r\n            {divineOrbPrice && (\r\n              <Box sx={{ marginRight: 2 }}>\r\n                <Typography variant=\"body1\">\r\n                  Divine Orb Price: {divineOrbPrice} Chaos Orbs\r\n                </Typography>\r\n              </Box>\r\n            )}\r\n            <Chip\r\n              label={isActive ? \"Active\" : \"Inactive\"}\r\n              color={isActive ? \"success\" : \"error\"}\r\n              sx={{ fontWeight: \"bold\" }}\r\n            />\r\n          </>\r\n        )}\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n\r\nexport default HeaderBar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}