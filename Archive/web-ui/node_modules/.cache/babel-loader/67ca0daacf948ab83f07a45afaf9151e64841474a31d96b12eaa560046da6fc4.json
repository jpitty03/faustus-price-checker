{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"column\", \"rowId\", \"editCellState\", \"align\", \"children\", \"colIndex\", \"width\", \"className\", \"style\", \"colSpan\", \"disableDragEvents\", \"isNotVisible\", \"pinnedOffset\", \"pinnedPosition\", \"showRightBorder\", \"showLeftBorder\", \"onClick\", \"onDoubleClick\", \"onMouseDown\", \"onMouseUp\", \"onMouseOver\", \"onKeyDown\", \"onKeyUp\", \"onDragEnter\", \"onDragOver\"],\n  _excluded2 = [\"changeReason\", \"unstable_updateValueOnRender\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef, unstable_composeClasses as composeClasses, unstable_ownerDocument as ownerDocument, unstable_capitalize as capitalize } from '@mui/utils';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { forwardRef } from '@mui/x-internals/forwardRef';\nimport { doesSupportPreventScroll } from \"../../utils/doesSupportPreventScroll.js\";\nimport { getDataGridUtilityClass, gridClasses } from \"../../constants/gridClasses.js\";\nimport { GridCellModes } from \"../../models/index.js\";\nimport { useGridSelector, objectShallowCompare } from \"../../hooks/utils/useGridSelector.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { gridFocusCellSelector } from \"../../hooks/features/focus/gridFocusStateSelector.js\";\nimport { GridPinnedColumnPosition } from \"../../hooks/features/columns/gridColumnsInterfaces.js\";\nimport { PinnedColumnPosition } from \"../../internals/constants.js\";\nimport { gridRowSpanningHiddenCellsSelector, gridRowSpanningSpannedCellsSelector } from \"../../hooks/features/rows/gridRowSpanningSelectors.js\";\nimport { attachPinnedStyle } from \"../../internals/utils/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const gridPinnedColumnPositionLookup = {\n  [PinnedColumnPosition.LEFT]: GridPinnedColumnPosition.LEFT,\n  [PinnedColumnPosition.RIGHT]: GridPinnedColumnPosition.RIGHT,\n  [PinnedColumnPosition.NONE]: undefined,\n  [PinnedColumnPosition.VIRTUAL]: undefined\n};\nconst EMPTY_CELL_PARAMS = {\n  id: -1,\n  field: '__unset__',\n  row: {},\n  rowNode: {\n    id: -1,\n    depth: 0,\n    type: 'leaf',\n    parent: -1,\n    groupingKey: null\n  },\n  colDef: {\n    type: 'string',\n    field: '__unset__',\n    computedWidth: 0\n  },\n  cellMode: GridCellModes.View,\n  hasFocus: false,\n  tabIndex: -1,\n  value: null,\n  formattedValue: '__unset__',\n  isEditable: false,\n  api: {}\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    showLeftBorder,\n    showRightBorder,\n    pinnedPosition,\n    isEditable,\n    isSelected,\n    isSelectionMode,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['cell', \"cell--text\".concat(capitalize(align)), isSelected && 'selected', isEditable && 'cell--editable', showLeftBorder && 'cell--withLeftBorder', showRightBorder && 'cell--withRightBorder', pinnedPosition === PinnedColumnPosition.LEFT && 'cell--pinnedLeft', pinnedPosition === PinnedColumnPosition.RIGHT && 'cell--pinnedRight', isSelectionMode && !isEditable && 'cell--selectionMode']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nlet warnedOnce = false;\n\n// TODO(v7): Removing the wrapper will break the docs performance visualization demo.\n\nconst GridCell = forwardRef(function GridCell(props, ref) {\n  var _column$getActions, _cellParams$formatted, _rootProps$cellSelect, _hiddenCells$rowId$fi, _hiddenCells$rowId, _spannedCells$rowId$f, _spannedCells$rowId, _rootProps$experiment;\n  const {\n      column,\n      rowId,\n      editCellState,\n      align,\n      colIndex,\n      width,\n      className,\n      style: styleProp,\n      colSpan,\n      disableDragEvents,\n      isNotVisible,\n      pinnedOffset,\n      pinnedPosition,\n      showRightBorder,\n      showLeftBorder,\n      onClick,\n      onDoubleClick,\n      onMouseDown,\n      onMouseUp,\n      onMouseOver,\n      onKeyDown,\n      onKeyUp,\n      onDragEnter,\n      onDragOver\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const isRtl = useRtl();\n  const field = column.field;\n  const cellParams = useGridSelector(apiRef, () => {\n    // This is required because `.getCellParams` tries to get the `state.rows.tree` entry\n    // associated with `rowId`/`fieldId`, but this selector runs after the state has been\n    // updated, while `rowId`/`fieldId` reference an entry in the old state.\n    const row = apiRef.current.getRow(rowId);\n    if (!row) {\n      return EMPTY_CELL_PARAMS;\n    }\n    const result = apiRef.current.getCellParams(rowId, field);\n    result.api = apiRef.current;\n    return result;\n  }, objectShallowCompare);\n  const isSelected = useGridSelector(apiRef, () => apiRef.current.unstable_applyPipeProcessors('isCellSelected', false, {\n    id: rowId,\n    field\n  }));\n  const hiddenCells = useGridSelector(apiRef, gridRowSpanningHiddenCellsSelector);\n  const spannedCells = useGridSelector(apiRef, gridRowSpanningSpannedCellsSelector);\n  const {\n    cellMode,\n    hasFocus,\n    isEditable = false,\n    value\n  } = cellParams;\n  const canManageOwnFocus = column.type === 'actions' && ((_column$getActions = column.getActions) === null || _column$getActions === void 0 ? void 0 : _column$getActions.call(column, apiRef.current.getRowParams(rowId)).some(action => !action.props.disabled));\n  const tabIndex = (cellMode === 'view' || !isEditable) && !canManageOwnFocus ? cellParams.tabIndex : -1;\n  const {\n    classes: rootClasses,\n    getCellClassName\n  } = rootProps;\n\n  // There is a hidden grid state access in `applyPipeProcessor('cellClassName', ...)`\n  const pipesClassName = useGridSelector(apiRef, () => apiRef.current.unstable_applyPipeProcessors('cellClassName', [], {\n    id: rowId,\n    field\n  }).filter(Boolean).join(' '));\n  const classNames = [pipesClassName];\n  if (column.cellClassName) {\n    classNames.push(typeof column.cellClassName === 'function' ? column.cellClassName(cellParams) : column.cellClassName);\n  }\n  if (column.display === 'flex') {\n    classNames.push(gridClasses['cell--flex']);\n  }\n  if (getCellClassName) {\n    classNames.push(getCellClassName(cellParams));\n  }\n  const valueToRender = (_cellParams$formatted = cellParams.formattedValue) !== null && _cellParams$formatted !== void 0 ? _cellParams$formatted : value;\n  const cellRef = React.useRef(null);\n  const handleRef = useForkRef(ref, cellRef);\n  const focusElementRef = React.useRef(null);\n  const isSelectionMode = (_rootProps$cellSelect = rootProps.cellSelection) !== null && _rootProps$cellSelect !== void 0 ? _rootProps$cellSelect : false;\n  const ownerState = {\n    align,\n    showLeftBorder,\n    showRightBorder,\n    isEditable,\n    classes: rootProps.classes,\n    pinnedPosition,\n    isSelected,\n    isSelectionMode\n  };\n  const classes = useUtilityClasses(ownerState);\n  const publishMouseUp = React.useCallback(eventName => event => {\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (onMouseUp) {\n      onMouseUp(event);\n    }\n  }, [apiRef, field, onMouseUp, rowId]);\n  const publishMouseDown = React.useCallback(eventName => event => {\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (onMouseDown) {\n      onMouseDown(event);\n    }\n  }, [apiRef, field, onMouseDown, rowId]);\n  const publish = React.useCallback((eventName, propHandler) => event => {\n    // The row might have been deleted during the click\n    if (!apiRef.current.getRow(rowId)) {\n      return;\n    }\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (propHandler) {\n      propHandler(event);\n    }\n  }, [apiRef, field, rowId]);\n  const isCellRowSpanned = (_hiddenCells$rowId$fi = (_hiddenCells$rowId = hiddenCells[rowId]) === null || _hiddenCells$rowId === void 0 ? void 0 : _hiddenCells$rowId[field]) !== null && _hiddenCells$rowId$fi !== void 0 ? _hiddenCells$rowId$fi : false;\n  const rowSpan = (_spannedCells$rowId$f = (_spannedCells$rowId = spannedCells[rowId]) === null || _spannedCells$rowId === void 0 ? void 0 : _spannedCells$rowId[field]) !== null && _spannedCells$rowId$f !== void 0 ? _spannedCells$rowId$f : 1;\n  const style = React.useMemo(() => {\n    if (isNotVisible) {\n      return {\n        padding: 0,\n        opacity: 0,\n        width: 0,\n        height: 0,\n        border: 0\n      };\n    }\n    const cellStyle = attachPinnedStyle(_extends({\n      '--width': \"\".concat(width, \"px\")\n    }, styleProp), isRtl, pinnedPosition, pinnedOffset);\n    const isLeftPinned = pinnedPosition === PinnedColumnPosition.LEFT;\n    const isRightPinned = pinnedPosition === PinnedColumnPosition.RIGHT;\n    if (rowSpan > 1) {\n      cellStyle.height = \"calc(var(--height) * \".concat(rowSpan, \")\");\n      cellStyle.zIndex = 5;\n      if (isLeftPinned || isRightPinned) {\n        cellStyle.zIndex = 6;\n      }\n    }\n    return cellStyle;\n  }, [width, isNotVisible, styleProp, pinnedOffset, pinnedPosition, isRtl, rowSpan]);\n  React.useEffect(() => {\n    if (!hasFocus || cellMode === GridCellModes.Edit) {\n      return;\n    }\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    if (cellRef.current && !cellRef.current.contains(doc.activeElement)) {\n      const focusableElement = cellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusElementRef.current || focusableElement || cellRef.current;\n      if (doesSupportPreventScroll()) {\n        elementToFocus.focus({\n          preventScroll: true\n        });\n      } else {\n        const scrollPosition = apiRef.current.getScrollPosition();\n        elementToFocus.focus();\n        apiRef.current.scroll(scrollPosition);\n      }\n    }\n  }, [hasFocus, cellMode, apiRef]);\n  if (isCellRowSpanned) {\n    return /*#__PURE__*/_jsx(\"div\", {\n      \"data-colindex\": colIndex,\n      role: \"presentation\",\n      style: _extends({\n        width: 'var(--width)'\n      }, style)\n    });\n  }\n  if (cellParams === EMPTY_CELL_PARAMS) {\n    return null;\n  }\n  let handleFocus = other.onFocus;\n  if (process.env.NODE_ENV === 'test' && (_rootProps$experiment = rootProps.experimentalFeatures) !== null && _rootProps$experiment !== void 0 && _rootProps$experiment.warnIfFocusStateIsNotSynced) {\n    handleFocus = event => {\n      const focusedCell = gridFocusCellSelector(apiRef);\n      if ((focusedCell === null || focusedCell === void 0 ? void 0 : focusedCell.id) === rowId && focusedCell.field === field) {\n        if (typeof other.onFocus === 'function') {\n          other.onFocus(event);\n        }\n        return;\n      }\n      if (!warnedOnce) {\n        console.warn([\"MUI X: The cell with id=\".concat(rowId, \" and field=\").concat(field, \" received focus.\"), \"According to the state, the focus should be at id=\".concat(focusedCell === null || focusedCell === void 0 ? void 0 : focusedCell.id, \", field=\").concat(focusedCell === null || focusedCell === void 0 ? void 0 : focusedCell.field, \".\"), \"Not syncing the state may cause unwanted behaviors since the `cellFocusIn` event won't be fired.\", 'Call `fireEvent.mouseUp` before the `fireEvent.click` to sync the focus with the state.'].join('\\n'));\n        warnedOnce = true;\n      }\n    };\n  }\n  let children;\n  let title;\n  if (editCellState === null && column.renderCell) {\n    children = column.renderCell(cellParams);\n  }\n  if (editCellState !== null && column.renderEditCell) {\n    const updatedRow = apiRef.current.getRowWithUpdatedValues(rowId, column.field);\n\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    const editCellStateRest = _objectWithoutPropertiesLoose(editCellState, _excluded2);\n    const formattedValue = column.valueFormatter ? column.valueFormatter(editCellState.value, updatedRow, column, apiRef) : cellParams.formattedValue;\n    const params = _extends({}, cellParams, {\n      row: updatedRow,\n      formattedValue\n    }, editCellStateRest);\n    children = column.renderEditCell(params);\n    classNames.push(gridClasses['cell--editing']);\n    classNames.push(rootClasses === null || rootClasses === void 0 ? void 0 : rootClasses['cell--editing']);\n  }\n  if (children === undefined) {\n    const valueString = valueToRender === null || valueToRender === void 0 ? void 0 : valueToRender.toString();\n    children = valueString;\n    title = valueString;\n  }\n  if (/*#__PURE__*/React.isValidElement(children) && canManageOwnFocus) {\n    children = /*#__PURE__*/React.cloneElement(children, {\n      focusElementRef\n    });\n  }\n  const draggableEventHandlers = disableDragEvents ? null : {\n    onDragEnter: publish('cellDragEnter', onDragEnter),\n    onDragOver: publish('cellDragOver', onDragOver)\n  };\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    className: clsx(classes.root, classNames, className),\n    role: \"gridcell\",\n    \"data-field\": field,\n    \"data-colindex\": colIndex,\n    \"aria-colindex\": colIndex + 1,\n    \"aria-colspan\": colSpan,\n    \"aria-rowspan\": rowSpan,\n    style: style,\n    title: title,\n    tabIndex: tabIndex,\n    onClick: publish('cellClick', onClick),\n    onDoubleClick: publish('cellDoubleClick', onDoubleClick),\n    onMouseOver: publish('cellMouseOver', onMouseOver),\n    onMouseDown: publishMouseDown('cellMouseDown'),\n    onMouseUp: publishMouseUp('cellMouseUp'),\n    onKeyDown: publish('cellKeyDown', onKeyDown),\n    onKeyUp: publish('cellKeyUp', onKeyUp)\n  }, draggableEventHandlers, other, {\n    onFocus: handleFocus,\n    ref: handleRef,\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  align: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n  colIndex: PropTypes.number.isRequired,\n  colSpan: PropTypes.number,\n  column: PropTypes.object.isRequired,\n  disableDragEvents: PropTypes.bool,\n  editCellState: PropTypes.shape({\n    changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n    isProcessingProps: PropTypes.bool,\n    isValidating: PropTypes.bool,\n    value: PropTypes.any\n  }),\n  isNotVisible: PropTypes.bool.isRequired,\n  pinnedOffset: PropTypes.number,\n  pinnedPosition: PropTypes.oneOf([0, 1, 2, 3]).isRequired,\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  showLeftBorder: PropTypes.bool.isRequired,\n  showRightBorder: PropTypes.bool.isRequired,\n  width: PropTypes.number.isRequired\n} : void 0;\nconst MemoizedGridCell = fastMemo(GridCell);\nexport { MemoizedGridCell as GridCell };","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","_excluded2","React","PropTypes","clsx","unstable_useForkRef","useForkRef","unstable_composeClasses","composeClasses","unstable_ownerDocument","ownerDocument","unstable_capitalize","capitalize","fastMemo","useRtl","forwardRef","doesSupportPreventScroll","getDataGridUtilityClass","gridClasses","GridCellModes","useGridSelector","objectShallowCompare","useGridApiContext","useGridRootProps","gridFocusCellSelector","GridPinnedColumnPosition","PinnedColumnPosition","gridRowSpanningHiddenCellsSelector","gridRowSpanningSpannedCellsSelector","attachPinnedStyle","jsx","_jsx","gridPinnedColumnPositionLookup","LEFT","RIGHT","NONE","undefined","VIRTUAL","EMPTY_CELL_PARAMS","id","field","row","rowNode","depth","type","parent","groupingKey","colDef","computedWidth","cellMode","View","hasFocus","tabIndex","value","formattedValue","isEditable","api","useUtilityClasses","ownerState","align","showLeftBorder","showRightBorder","pinnedPosition","isSelected","isSelectionMode","classes","slots","root","concat","warnedOnce","GridCell","props","ref","_column$getActions","_cellParams$formatted","_rootProps$cellSelect","_hiddenCells$rowId$fi","_hiddenCells$rowId","_spannedCells$rowId$f","_spannedCells$rowId","_rootProps$experiment","column","rowId","editCellState","colIndex","width","className","style","styleProp","colSpan","disableDragEvents","isNotVisible","pinnedOffset","onClick","onDoubleClick","onMouseDown","onMouseUp","onMouseOver","onKeyDown","onKeyUp","onDragEnter","onDragOver","other","apiRef","rootProps","isRtl","cellParams","current","getRow","result","getCellParams","unstable_applyPipeProcessors","hiddenCells","spannedCells","canManageOwnFocus","getActions","call","getRowParams","some","action","disabled","rootClasses","getCellClassName","pipesClassName","filter","Boolean","join","classNames","cellClassName","push","display","valueToRender","cellRef","useRef","handleRef","focusElementRef","cellSelection","publishMouseUp","useCallback","eventName","event","params","publishEvent","publishMouseDown","publish","propHandler","isCellRowSpanned","rowSpan","useMemo","padding","opacity","height","border","cellStyle","isLeftPinned","isRightPinned","zIndex","useEffect","Edit","doc","rootElementRef","contains","activeElement","focusableElement","querySelector","elementToFocus","focus","preventScroll","scrollPosition","getScrollPosition","scroll","role","handleFocus","onFocus","process","env","NODE_ENV","experimentalFeatures","warnIfFocusStateIsNotSynced","focusedCell","console","warn","children","title","renderCell","renderEditCell","updatedRow","getRowWithUpdatedValues","editCellStateRest","valueFormatter","valueString","toString","isValidElement","cloneElement","draggableEventHandlers","propTypes","oneOf","isRequired","number","object","bool","shape","changeReason","isProcessingProps","isValidating","any","oneOfType","string","MemoizedGridCell"],"sources":["C:/Users/jpitt/VSCode/faustus-price-checker/web-ui/node_modules/@mui/x-data-grid/components/cell/GridCell.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"column\", \"rowId\", \"editCellState\", \"align\", \"children\", \"colIndex\", \"width\", \"className\", \"style\", \"colSpan\", \"disableDragEvents\", \"isNotVisible\", \"pinnedOffset\", \"pinnedPosition\", \"showRightBorder\", \"showLeftBorder\", \"onClick\", \"onDoubleClick\", \"onMouseDown\", \"onMouseUp\", \"onMouseOver\", \"onKeyDown\", \"onKeyUp\", \"onDragEnter\", \"onDragOver\"],\n  _excluded2 = [\"changeReason\", \"unstable_updateValueOnRender\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef, unstable_composeClasses as composeClasses, unstable_ownerDocument as ownerDocument, unstable_capitalize as capitalize } from '@mui/utils';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { forwardRef } from '@mui/x-internals/forwardRef';\nimport { doesSupportPreventScroll } from \"../../utils/doesSupportPreventScroll.js\";\nimport { getDataGridUtilityClass, gridClasses } from \"../../constants/gridClasses.js\";\nimport { GridCellModes } from \"../../models/index.js\";\nimport { useGridSelector, objectShallowCompare } from \"../../hooks/utils/useGridSelector.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { gridFocusCellSelector } from \"../../hooks/features/focus/gridFocusStateSelector.js\";\nimport { GridPinnedColumnPosition } from \"../../hooks/features/columns/gridColumnsInterfaces.js\";\nimport { PinnedColumnPosition } from \"../../internals/constants.js\";\nimport { gridRowSpanningHiddenCellsSelector, gridRowSpanningSpannedCellsSelector } from \"../../hooks/features/rows/gridRowSpanningSelectors.js\";\nimport { attachPinnedStyle } from \"../../internals/utils/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const gridPinnedColumnPositionLookup = {\n  [PinnedColumnPosition.LEFT]: GridPinnedColumnPosition.LEFT,\n  [PinnedColumnPosition.RIGHT]: GridPinnedColumnPosition.RIGHT,\n  [PinnedColumnPosition.NONE]: undefined,\n  [PinnedColumnPosition.VIRTUAL]: undefined\n};\nconst EMPTY_CELL_PARAMS = {\n  id: -1,\n  field: '__unset__',\n  row: {},\n  rowNode: {\n    id: -1,\n    depth: 0,\n    type: 'leaf',\n    parent: -1,\n    groupingKey: null\n  },\n  colDef: {\n    type: 'string',\n    field: '__unset__',\n    computedWidth: 0\n  },\n  cellMode: GridCellModes.View,\n  hasFocus: false,\n  tabIndex: -1,\n  value: null,\n  formattedValue: '__unset__',\n  isEditable: false,\n  api: {}\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    showLeftBorder,\n    showRightBorder,\n    pinnedPosition,\n    isEditable,\n    isSelected,\n    isSelectionMode,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['cell', `cell--text${capitalize(align)}`, isSelected && 'selected', isEditable && 'cell--editable', showLeftBorder && 'cell--withLeftBorder', showRightBorder && 'cell--withRightBorder', pinnedPosition === PinnedColumnPosition.LEFT && 'cell--pinnedLeft', pinnedPosition === PinnedColumnPosition.RIGHT && 'cell--pinnedRight', isSelectionMode && !isEditable && 'cell--selectionMode']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nlet warnedOnce = false;\n\n// TODO(v7): Removing the wrapper will break the docs performance visualization demo.\n\nconst GridCell = forwardRef(function GridCell(props, ref) {\n  const {\n      column,\n      rowId,\n      editCellState,\n      align,\n      colIndex,\n      width,\n      className,\n      style: styleProp,\n      colSpan,\n      disableDragEvents,\n      isNotVisible,\n      pinnedOffset,\n      pinnedPosition,\n      showRightBorder,\n      showLeftBorder,\n      onClick,\n      onDoubleClick,\n      onMouseDown,\n      onMouseUp,\n      onMouseOver,\n      onKeyDown,\n      onKeyUp,\n      onDragEnter,\n      onDragOver\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const isRtl = useRtl();\n  const field = column.field;\n  const cellParams = useGridSelector(apiRef, () => {\n    // This is required because `.getCellParams` tries to get the `state.rows.tree` entry\n    // associated with `rowId`/`fieldId`, but this selector runs after the state has been\n    // updated, while `rowId`/`fieldId` reference an entry in the old state.\n    const row = apiRef.current.getRow(rowId);\n    if (!row) {\n      return EMPTY_CELL_PARAMS;\n    }\n    const result = apiRef.current.getCellParams(rowId, field);\n    result.api = apiRef.current;\n    return result;\n  }, objectShallowCompare);\n  const isSelected = useGridSelector(apiRef, () => apiRef.current.unstable_applyPipeProcessors('isCellSelected', false, {\n    id: rowId,\n    field\n  }));\n  const hiddenCells = useGridSelector(apiRef, gridRowSpanningHiddenCellsSelector);\n  const spannedCells = useGridSelector(apiRef, gridRowSpanningSpannedCellsSelector);\n  const {\n    cellMode,\n    hasFocus,\n    isEditable = false,\n    value\n  } = cellParams;\n  const canManageOwnFocus = column.type === 'actions' && column.getActions?.(apiRef.current.getRowParams(rowId)).some(action => !action.props.disabled);\n  const tabIndex = (cellMode === 'view' || !isEditable) && !canManageOwnFocus ? cellParams.tabIndex : -1;\n  const {\n    classes: rootClasses,\n    getCellClassName\n  } = rootProps;\n\n  // There is a hidden grid state access in `applyPipeProcessor('cellClassName', ...)`\n  const pipesClassName = useGridSelector(apiRef, () => apiRef.current.unstable_applyPipeProcessors('cellClassName', [], {\n    id: rowId,\n    field\n  }).filter(Boolean).join(' '));\n  const classNames = [pipesClassName];\n  if (column.cellClassName) {\n    classNames.push(typeof column.cellClassName === 'function' ? column.cellClassName(cellParams) : column.cellClassName);\n  }\n  if (column.display === 'flex') {\n    classNames.push(gridClasses['cell--flex']);\n  }\n  if (getCellClassName) {\n    classNames.push(getCellClassName(cellParams));\n  }\n  const valueToRender = cellParams.formattedValue ?? value;\n  const cellRef = React.useRef(null);\n  const handleRef = useForkRef(ref, cellRef);\n  const focusElementRef = React.useRef(null);\n  const isSelectionMode = rootProps.cellSelection ?? false;\n  const ownerState = {\n    align,\n    showLeftBorder,\n    showRightBorder,\n    isEditable,\n    classes: rootProps.classes,\n    pinnedPosition,\n    isSelected,\n    isSelectionMode\n  };\n  const classes = useUtilityClasses(ownerState);\n  const publishMouseUp = React.useCallback(eventName => event => {\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (onMouseUp) {\n      onMouseUp(event);\n    }\n  }, [apiRef, field, onMouseUp, rowId]);\n  const publishMouseDown = React.useCallback(eventName => event => {\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (onMouseDown) {\n      onMouseDown(event);\n    }\n  }, [apiRef, field, onMouseDown, rowId]);\n  const publish = React.useCallback((eventName, propHandler) => event => {\n    // The row might have been deleted during the click\n    if (!apiRef.current.getRow(rowId)) {\n      return;\n    }\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (propHandler) {\n      propHandler(event);\n    }\n  }, [apiRef, field, rowId]);\n  const isCellRowSpanned = hiddenCells[rowId]?.[field] ?? false;\n  const rowSpan = spannedCells[rowId]?.[field] ?? 1;\n  const style = React.useMemo(() => {\n    if (isNotVisible) {\n      return {\n        padding: 0,\n        opacity: 0,\n        width: 0,\n        height: 0,\n        border: 0\n      };\n    }\n    const cellStyle = attachPinnedStyle(_extends({\n      '--width': `${width}px`\n    }, styleProp), isRtl, pinnedPosition, pinnedOffset);\n    const isLeftPinned = pinnedPosition === PinnedColumnPosition.LEFT;\n    const isRightPinned = pinnedPosition === PinnedColumnPosition.RIGHT;\n    if (rowSpan > 1) {\n      cellStyle.height = `calc(var(--height) * ${rowSpan})`;\n      cellStyle.zIndex = 5;\n      if (isLeftPinned || isRightPinned) {\n        cellStyle.zIndex = 6;\n      }\n    }\n    return cellStyle;\n  }, [width, isNotVisible, styleProp, pinnedOffset, pinnedPosition, isRtl, rowSpan]);\n  React.useEffect(() => {\n    if (!hasFocus || cellMode === GridCellModes.Edit) {\n      return;\n    }\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    if (cellRef.current && !cellRef.current.contains(doc.activeElement)) {\n      const focusableElement = cellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusElementRef.current || focusableElement || cellRef.current;\n      if (doesSupportPreventScroll()) {\n        elementToFocus.focus({\n          preventScroll: true\n        });\n      } else {\n        const scrollPosition = apiRef.current.getScrollPosition();\n        elementToFocus.focus();\n        apiRef.current.scroll(scrollPosition);\n      }\n    }\n  }, [hasFocus, cellMode, apiRef]);\n  if (isCellRowSpanned) {\n    return /*#__PURE__*/_jsx(\"div\", {\n      \"data-colindex\": colIndex,\n      role: \"presentation\",\n      style: _extends({\n        width: 'var(--width)'\n      }, style)\n    });\n  }\n  if (cellParams === EMPTY_CELL_PARAMS) {\n    return null;\n  }\n  let handleFocus = other.onFocus;\n  if (process.env.NODE_ENV === 'test' && rootProps.experimentalFeatures?.warnIfFocusStateIsNotSynced) {\n    handleFocus = event => {\n      const focusedCell = gridFocusCellSelector(apiRef);\n      if (focusedCell?.id === rowId && focusedCell.field === field) {\n        if (typeof other.onFocus === 'function') {\n          other.onFocus(event);\n        }\n        return;\n      }\n      if (!warnedOnce) {\n        console.warn([`MUI X: The cell with id=${rowId} and field=${field} received focus.`, `According to the state, the focus should be at id=${focusedCell?.id}, field=${focusedCell?.field}.`, \"Not syncing the state may cause unwanted behaviors since the `cellFocusIn` event won't be fired.\", 'Call `fireEvent.mouseUp` before the `fireEvent.click` to sync the focus with the state.'].join('\\n'));\n        warnedOnce = true;\n      }\n    };\n  }\n  let children;\n  let title;\n  if (editCellState === null && column.renderCell) {\n    children = column.renderCell(cellParams);\n  }\n  if (editCellState !== null && column.renderEditCell) {\n    const updatedRow = apiRef.current.getRowWithUpdatedValues(rowId, column.field);\n\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    const editCellStateRest = _objectWithoutPropertiesLoose(editCellState, _excluded2);\n    const formattedValue = column.valueFormatter ? column.valueFormatter(editCellState.value, updatedRow, column, apiRef) : cellParams.formattedValue;\n    const params = _extends({}, cellParams, {\n      row: updatedRow,\n      formattedValue\n    }, editCellStateRest);\n    children = column.renderEditCell(params);\n    classNames.push(gridClasses['cell--editing']);\n    classNames.push(rootClasses?.['cell--editing']);\n  }\n  if (children === undefined) {\n    const valueString = valueToRender?.toString();\n    children = valueString;\n    title = valueString;\n  }\n  if (/*#__PURE__*/React.isValidElement(children) && canManageOwnFocus) {\n    children = /*#__PURE__*/React.cloneElement(children, {\n      focusElementRef\n    });\n  }\n  const draggableEventHandlers = disableDragEvents ? null : {\n    onDragEnter: publish('cellDragEnter', onDragEnter),\n    onDragOver: publish('cellDragOver', onDragOver)\n  };\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    className: clsx(classes.root, classNames, className),\n    role: \"gridcell\",\n    \"data-field\": field,\n    \"data-colindex\": colIndex,\n    \"aria-colindex\": colIndex + 1,\n    \"aria-colspan\": colSpan,\n    \"aria-rowspan\": rowSpan,\n    style: style,\n    title: title,\n    tabIndex: tabIndex,\n    onClick: publish('cellClick', onClick),\n    onDoubleClick: publish('cellDoubleClick', onDoubleClick),\n    onMouseOver: publish('cellMouseOver', onMouseOver),\n    onMouseDown: publishMouseDown('cellMouseDown'),\n    onMouseUp: publishMouseUp('cellMouseUp'),\n    onKeyDown: publish('cellKeyDown', onKeyDown),\n    onKeyUp: publish('cellKeyUp', onKeyUp)\n  }, draggableEventHandlers, other, {\n    onFocus: handleFocus,\n    ref: handleRef,\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  align: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n  colIndex: PropTypes.number.isRequired,\n  colSpan: PropTypes.number,\n  column: PropTypes.object.isRequired,\n  disableDragEvents: PropTypes.bool,\n  editCellState: PropTypes.shape({\n    changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n    isProcessingProps: PropTypes.bool,\n    isValidating: PropTypes.bool,\n    value: PropTypes.any\n  }),\n  isNotVisible: PropTypes.bool.isRequired,\n  pinnedOffset: PropTypes.number,\n  pinnedPosition: PropTypes.oneOf([0, 1, 2, 3]).isRequired,\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  showLeftBorder: PropTypes.bool.isRequired,\n  showRightBorder: PropTypes.bool.isRequired,\n  width: PropTypes.number.isRequired\n} : void 0;\nconst MemoizedGridCell = fastMemo(GridCell);\nexport { MemoizedGridCell as GridCell };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}