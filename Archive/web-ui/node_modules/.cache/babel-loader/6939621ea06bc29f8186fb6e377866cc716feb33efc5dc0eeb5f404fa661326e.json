{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jpitt\\\\VSCode\\\\faustus-price-checker\\\\web-ui\\\\src\\\\components\\\\PriceDataGrid.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { DataGrid } from \"@mui/x-data-grid\";\n\n// This is your existing \"priceData\" with \"exchanges\" you want to flatten\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst priceData = {\n  \"updated\": \"2025-01-26T02:42:40.406188Z\",\n  \"exchanges\": [{\n    \"haveCurrency\": \"Chaos Orb\",\n    \"wantCurrency\": \"Divine Orb\",\n    \"lastUpdated\": \"2025-01-24T06:05:24.181317Z\",\n    \"offers\": [{\n      \"haveAmount\": 1.0,\n      \"wantAmount\": 180.0,\n      \"stock\": 1\n    }, {\n      \"haveAmount\": 1.0,\n      \"wantAmount\": 183.0,\n      \"stock\": 2\n    }, {\n      \"haveAmount\": 1.0,\n      \"wantAmount\": 185.0,\n      \"stock\": 37\n    }, {\n      \"haveAmount\": 1.0,\n      \"wantAmount\": 187.0,\n      \"stock\": 1\n    }, {\n      \"haveAmount\": 1.0,\n      \"wantAmount\": 188.0,\n      \"stock\": 100\n    }, {\n      \"haveAmount\": 1.0,\n      \"wantAmount\": 188.0,\n      \"stock\": 395\n    }],\n    \"competingTrades\": [{\n      \"haveAmount\": 1.0,\n      \"wantAmount\": 175.0,\n      \"stock\": 175\n    }, {\n      \"haveAmount\": 1.0,\n      \"wantAmount\": 171.0,\n      \"stock\": 8037\n    }, {\n      \"haveAmount\": 1.0,\n      \"wantAmount\": 170.0,\n      \"stock\": 2210\n    }, {\n      \"haveAmount\": 1.0,\n      \"wantAmount\": 169.0,\n      \"stock\": 507\n    }, {\n      \"haveAmount\": 1.0,\n      \"wantAmount\": 168.0,\n      \"stock\": 1008\n    }, {\n      \"haveAmount\": 1.0,\n      \"wantAmount\": 168.0,\n      \"stock\": 895696\n    }]\n  }, {\n    \"haveCurrency\": \"Divine Orb\",\n    \"wantCurrency\": \"Orb of Alteration\",\n    \"lastUpdated\": \"2025-01-24T22:40:41.168435Z\",\n    \"offers\": [{\n      \"haveAmount\": 6.0,\n      \"wantAmount\": 1.0,\n      \"stock\": 2676\n    }, {\n      \"haveAmount\": 5.0,\n      \"wantAmount\": 1.0,\n      \"stock\": 3730\n    }, {\n      \"haveAmount\": 4.25,\n      \"wantAmount\": 1.0,\n      \"stock\": 30\n    }, {\n      \"haveAmount\": 4.0,\n      \"wantAmount\": 1.0,\n      \"stock\": 392\n    }, {\n      \"haveAmount\": 3.54,\n      \"wantAmount\": 1.0,\n      \"stock\": 280\n    }, {\n      \"haveAmount\": 3.54,\n      \"wantAmount\": 1.0,\n      \"stock\": 29889\n    }],\n    \"competingTrades\": [{\n      \"haveAmount\": 9.98,\n      \"wantAmount\": 1.0,\n      \"stock\": 200\n    }, {\n      \"haveAmount\": 9.99,\n      \"wantAmount\": 1.0,\n      \"stock\": 200\n    }, {\n      \"haveAmount\": 10.0,\n      \"wantAmount\": 1.0,\n      \"stock\": 4239\n    }, {\n      \"haveAmount\": 1.0,\n      \"wantAmount\": 1.0,\n      \"stock\": 10\n    }, {\n      \"haveAmount\": 12.0,\n      \"wantAmount\": 1.0,\n      \"stock\": 41\n    }, {\n      \"haveAmount\": 12.0,\n      \"wantAmount\": 1.0,\n      \"stock\": 799\n    }]\n  }, {\n    \"haveCurrency\": \"Chaos Orb\",\n    \"wantCurrency\": \"Orb of Alteration\",\n    \"lastUpdated\": \"2025-01-24T22:41:40.395883Z\",\n    \"offers\": [{\n      \"haveAmount\": 7.0,\n      \"wantAmount\": 1.0,\n      \"stock\": 21\n    }, {\n      \"haveAmount\": 6.0,\n      \"wantAmount\": 1.0,\n      \"stock\": 2676\n    }, {\n      \"haveAmount\": 5.0,\n      \"wantAmount\": 1.0,\n      \"stock\": 3730\n    }, {\n      \"haveAmount\": 4.25,\n      \"wantAmount\": 1.0,\n      \"stock\": 30\n    }, {\n      \"haveAmount\": 4.0,\n      \"wantAmount\": 1.0,\n      \"stock\": 392\n    }, {\n      \"haveAmount\": 4.0,\n      \"wantAmount\": 1.0,\n      \"stock\": 30169\n    }],\n    \"competingTrades\": [{\n      \"haveAmount\": 9.98,\n      \"wantAmount\": 1.0,\n      \"stock\": 200\n    }, {\n      \"haveAmount\": 9.99,\n      \"wantAmount\": 1.0,\n      \"stock\": 200\n    }, {\n      \"haveAmount\": 10.0,\n      \"wantAmount\": 1.0,\n      \"stock\": 4239\n    }, {\n      \"haveAmount\": 1.0,\n      \"wantAmount\": 1.0,\n      \"stock\": 10\n    }, {\n      \"haveAmount\": 12.0,\n      \"wantAmount\": 1.0,\n      \"stock\": 41\n    }, {\n      \"haveAmount\": 12.0,\n      \"wantAmount\": 1.0,\n      \"stock\": 799\n    }]\n  }, {\n    \"haveCurrency\": \"Chaos Orb\",\n    \"wantCurrency\": \"Orb of Regret\",\n    \"lastUpdated\": \"2025-01-26T02:42:40.406188Z\",\n    \"offers\": [{\n      \"haveAmount\": 1.25,\n      \"wantAmount\": 1.0,\n      \"stock\": 2860\n    }, {\n      \"haveAmount\": 1.1,\n      \"wantAmount\": 1.0,\n      \"stock\": 2541\n    }, {\n      \"haveAmount\": 1.08,\n      \"wantAmount\": 1.0,\n      \"stock\": 65\n    }, {\n      \"haveAmount\": 1.0,\n      \"wantAmount\": 1.0,\n      \"stock\": 12\n    }, {\n      \"haveAmount\": 1.0,\n      \"wantAmount\": 1.17,\n      \"stock\": 1226\n    }, {\n      \"haveAmount\": 1.0,\n      \"wantAmount\": 1.17,\n      \"stock\": 9420\n    }],\n    \"competingTrades\": [{\n      \"haveAmount\": 4.0,\n      \"wantAmount\": 1.0,\n      \"stock\": 1\n    }, {\n      \"haveAmount\": 15.0,\n      \"wantAmount\": 1.0,\n      \"stock\": 80\n    }, {\n      \"haveAmount\": 7.0,\n      \"wantAmount\": 1.0,\n      \"stock\": 1\n    }, {\n      \"haveAmount\": 20.0,\n      \"wantAmount\": 1.0,\n      \"stock\": 6\n    }, {\n      \"haveAmount\": 25.0,\n      \"wantAmount\": 1.0,\n      \"stock\": 6\n    }, {\n      \"haveAmount\": 25.0,\n      \"wantAmount\": 1.0,\n      \"stock\": 22\n    }]\n  }]\n};\n\n// 1) Flatten logic: create rows for first offer and first competing\nfunction flattenExchanges(pData) {\n  let rowId = 1;\n  const rows = [];\n  pData.exchanges.forEach(exchange => {\n    const {\n      haveCurrency,\n      wantCurrency,\n      lastUpdated,\n      offers,\n      competingTrades\n    } = exchange;\n\n    // first offer\n    if (offers && offers.length > 0) {\n      const firstOffer = offers[0];\n      rows.push({\n        id: rowId++,\n        rowType: \"offer\",\n        haveCurrency,\n        wantCurrency,\n        lastUpdated,\n        haveAmount: firstOffer.wantAmount,\n        wantAmount: firstOffer.haveAmount,\n        stock: firstOffer.stock\n      });\n    }\n    // first competing\n    if (competingTrades && competingTrades.length > 0) {\n      const firstCompeting = competingTrades[0];\n      rows.push({\n        id: rowId++,\n        rowType: \"competing\",\n        haveCurrency,\n        wantCurrency,\n        lastUpdated,\n        haveAmount: firstCompeting.wantAmount,\n        wantAmount: firstCompeting.haveAmount,\n        stock: firstCompeting.stock\n      });\n    }\n  });\n  return rows;\n}\nexport default function PriceDataGrid() {\n  _s();\n  // State for row data and the icon map\n  const [rows, setRows] = useState([]);\n  const [currencyIconMap, setCurrencyIconMap] = useState({});\n  const [loading, setLoading] = useState(true);\n\n  // 2) On mount, fetch currencyOverview.json from public/\n  //    Then build the icon map and flatten the local priceData\n  useEffect(() => {\n    fetch(\"/currencyOverview.json\").then(res => {\n      if (!res.ok) {\n        throw new Error(`Failed to fetch /currencyOverview.json: ${res.status}`);\n      }\n      return res.json();\n    }).then(currencyJson => {\n      console.log(\"Fetched currencyOverview.json:\", currencyJson);\n      // currencyJson should have something like { currencyDetails: [ { name, icon, ... }, ... ] }\n      const map = {};\n      if (currencyJson.currencyDetails) {\n        currencyJson.currencyDetails.forEach(c => {\n          map[c.name] = c.icon;\n        });\n      }\n\n      // Flatten your local priceData.exchanges\n      const flattened = flattenExchanges(priceData);\n\n      // Store them in state\n      setCurrencyIconMap(map);\n      setRows(flattened);\n      setLoading(false);\n    }).catch(err => {\n      console.error(\"Error fetching currencyOverview.json:\", err);\n      setLoading(false);\n    });\n  }, []);\n\n  // 3) Define columns, referencing currencyIconMap in renderCell\n  const columns = [{\n    field: \"haveCurrency\",\n    headerName: \"Have Currency\",\n    width: 200,\n    renderCell: params => {\n      const currencyName = params.value; // e.g. \"Chaos Orb\"\n      const iconUrl = currencyIconMap[currencyName]; // look up the icon\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          alignItems: \"center\"\n        },\n        children: [iconUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: iconUrl,\n          alt: currencyName,\n          style: {\n            width: 24,\n            height: 24,\n            marginRight: 8\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 15\n        }, this), currencyName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 11\n      }, this);\n    }\n  }, {\n    field: \"wantCurrency\",\n    headerName: \"Want Currency\",\n    width: 130\n  }, {\n    field: \"lastUpdated\",\n    headerName: \"Last Updated\",\n    width: 180\n  }, {\n    field: \"rowType\",\n    headerName: \"Type\",\n    width: 90\n  }, {\n    field: \"haveAmount\",\n    headerName: \"Have Amt\",\n    type: \"number\",\n    width: 100\n  }, {\n    field: \"wantAmount\",\n    headerName: \"Want Amt\",\n    type: \"number\",\n    width: 100\n  }, {\n    field: \"stock\",\n    headerName: \"Stock\",\n    type: \"number\",\n    width: 100\n  }\n  // If you want a 'ninjaPrice' or anything else, just add it here\n  ];\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading Data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: 800,\n      width: \"100%\",\n      marginTop: \"1rem\"\n    },\n    children: /*#__PURE__*/_jsxDEV(DataGrid, {\n      rows: rows,\n      columns: columns,\n      pageSize: 10,\n      rowsPerPageOptions: [5, 10, 25],\n      disableSelectionOnClick: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 403,\n    columnNumber: 5\n  }, this);\n}\n_s(PriceDataGrid, \"zvqA+PDE3ZqKN4nXsPjSqjFJM+s=\");\n_c = PriceDataGrid;\nvar _c;\n$RefreshReg$(_c, \"PriceDataGrid\");","map":{"version":3,"names":["React","useEffect","useState","DataGrid","jsxDEV","_jsxDEV","priceData","flattenExchanges","pData","rowId","rows","exchanges","forEach","exchange","haveCurrency","wantCurrency","lastUpdated","offers","competingTrades","length","firstOffer","push","id","rowType","haveAmount","wantAmount","stock","firstCompeting","PriceDataGrid","_s","setRows","currencyIconMap","setCurrencyIconMap","loading","setLoading","fetch","then","res","ok","Error","status","json","currencyJson","console","log","map","currencyDetails","c","name","icon","flattened","catch","err","error","columns","field","headerName","width","renderCell","params","currencyName","value","iconUrl","style","display","alignItems","children","src","alt","height","marginRight","fileName","_jsxFileName","lineNumber","columnNumber","type","marginTop","pageSize","rowsPerPageOptions","disableSelectionOnClick","_c","$RefreshReg$"],"sources":["C:/Users/jpitt/VSCode/faustus-price-checker/web-ui/src/components/PriceDataGrid.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\n\r\n// This is your existing \"priceData\" with \"exchanges\" you want to flatten\r\nconst priceData = {\r\n    \"updated\": \"2025-01-26T02:42:40.406188Z\",\r\n    \"exchanges\": [\r\n      {\r\n        \"haveCurrency\": \"Chaos Orb\",\r\n        \"wantCurrency\": \"Divine Orb\",\r\n        \"lastUpdated\": \"2025-01-24T06:05:24.181317Z\",\r\n        \"offers\": [\r\n          {\r\n            \"haveAmount\": 1.0,\r\n            \"wantAmount\": 180.0,\r\n            \"stock\": 1\r\n          },\r\n          {\r\n            \"haveAmount\": 1.0,\r\n            \"wantAmount\": 183.0,\r\n            \"stock\": 2\r\n          },\r\n          {\r\n            \"haveAmount\": 1.0,\r\n            \"wantAmount\": 185.0,\r\n            \"stock\": 37\r\n          },\r\n          {\r\n            \"haveAmount\": 1.0,\r\n            \"wantAmount\": 187.0,\r\n            \"stock\": 1\r\n          },\r\n          {\r\n            \"haveAmount\": 1.0,\r\n            \"wantAmount\": 188.0,\r\n            \"stock\": 100\r\n          },\r\n          {\r\n            \"haveAmount\": 1.0,\r\n            \"wantAmount\": 188.0,\r\n            \"stock\": 395\r\n          }\r\n        ],\r\n        \"competingTrades\": [\r\n          {\r\n            \"haveAmount\": 1.0,\r\n            \"wantAmount\": 175.0,\r\n            \"stock\": 175\r\n          },\r\n          {\r\n            \"haveAmount\": 1.0,\r\n            \"wantAmount\": 171.0,\r\n            \"stock\": 8037\r\n          },\r\n          {\r\n            \"haveAmount\": 1.0,\r\n            \"wantAmount\": 170.0,\r\n            \"stock\": 2210\r\n          },\r\n          {\r\n            \"haveAmount\": 1.0,\r\n            \"wantAmount\": 169.0,\r\n            \"stock\": 507\r\n          },\r\n          {\r\n            \"haveAmount\": 1.0,\r\n            \"wantAmount\": 168.0,\r\n            \"stock\": 1008\r\n          },\r\n          {\r\n            \"haveAmount\": 1.0,\r\n            \"wantAmount\": 168.0,\r\n            \"stock\": 895696\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"haveCurrency\": \"Divine Orb\",\r\n        \"wantCurrency\": \"Orb of Alteration\",\r\n        \"lastUpdated\": \"2025-01-24T22:40:41.168435Z\",\r\n        \"offers\": [\r\n          {\r\n            \"haveAmount\": 6.0,\r\n            \"wantAmount\": 1.0,\r\n            \"stock\": 2676\r\n          },\r\n          {\r\n            \"haveAmount\": 5.0,\r\n            \"wantAmount\": 1.0,\r\n            \"stock\": 3730\r\n          },\r\n          {\r\n            \"haveAmount\": 4.25,\r\n            \"wantAmount\": 1.0,\r\n            \"stock\": 30\r\n          },\r\n          {\r\n            \"haveAmount\": 4.0,\r\n            \"wantAmount\": 1.0,\r\n            \"stock\": 392\r\n          },\r\n          {\r\n            \"haveAmount\": 3.54,\r\n            \"wantAmount\": 1.0,\r\n            \"stock\": 280\r\n          },\r\n          {\r\n            \"haveAmount\": 3.54,\r\n            \"wantAmount\": 1.0,\r\n            \"stock\": 29889\r\n          }\r\n        ],\r\n        \"competingTrades\": [\r\n          {\r\n            \"haveAmount\": 9.98,\r\n            \"wantAmount\": 1.0,\r\n            \"stock\": 200\r\n          },\r\n          {\r\n            \"haveAmount\": 9.99,\r\n            \"wantAmount\": 1.0,\r\n            \"stock\": 200\r\n          },\r\n          {\r\n            \"haveAmount\": 10.0,\r\n            \"wantAmount\": 1.0,\r\n            \"stock\": 4239\r\n          },\r\n          {\r\n            \"haveAmount\": 1.0,\r\n            \"wantAmount\": 1.0,\r\n            \"stock\": 10\r\n          },\r\n          {\r\n            \"haveAmount\": 12.0,\r\n            \"wantAmount\": 1.0,\r\n            \"stock\": 41\r\n          },\r\n          {\r\n            \"haveAmount\": 12.0,\r\n            \"wantAmount\": 1.0,\r\n            \"stock\": 799\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"haveCurrency\": \"Chaos Orb\",\r\n        \"wantCurrency\": \"Orb of Alteration\",\r\n        \"lastUpdated\": \"2025-01-24T22:41:40.395883Z\",\r\n        \"offers\": [\r\n          {\r\n            \"haveAmount\": 7.0,\r\n            \"wantAmount\": 1.0,\r\n            \"stock\": 21\r\n          },\r\n          {\r\n            \"haveAmount\": 6.0,\r\n            \"wantAmount\": 1.0,\r\n            \"stock\": 2676\r\n          },\r\n          {\r\n            \"haveAmount\": 5.0,\r\n            \"wantAmount\": 1.0,\r\n            \"stock\": 3730\r\n          },\r\n          {\r\n            \"haveAmount\": 4.25,\r\n            \"wantAmount\": 1.0,\r\n            \"stock\": 30\r\n          },\r\n          {\r\n            \"haveAmount\": 4.0,\r\n            \"wantAmount\": 1.0,\r\n            \"stock\": 392\r\n          },\r\n          {\r\n            \"haveAmount\": 4.0,\r\n            \"wantAmount\": 1.0,\r\n            \"stock\": 30169\r\n          }\r\n        ],\r\n        \"competingTrades\": [\r\n          {\r\n            \"haveAmount\": 9.98,\r\n            \"wantAmount\": 1.0,\r\n            \"stock\": 200\r\n          },\r\n          {\r\n            \"haveAmount\": 9.99,\r\n            \"wantAmount\": 1.0,\r\n            \"stock\": 200\r\n          },\r\n          {\r\n            \"haveAmount\": 10.0,\r\n            \"wantAmount\": 1.0,\r\n            \"stock\": 4239\r\n          },\r\n          {\r\n            \"haveAmount\": 1.0,\r\n            \"wantAmount\": 1.0,\r\n            \"stock\": 10\r\n          },\r\n          {\r\n            \"haveAmount\": 12.0,\r\n            \"wantAmount\": 1.0,\r\n            \"stock\": 41\r\n          },\r\n          {\r\n            \"haveAmount\": 12.0,\r\n            \"wantAmount\": 1.0,\r\n            \"stock\": 799\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"haveCurrency\": \"Chaos Orb\",\r\n        \"wantCurrency\": \"Orb of Regret\",\r\n        \"lastUpdated\": \"2025-01-26T02:42:40.406188Z\",\r\n        \"offers\": [\r\n          {\r\n            \"haveAmount\": 1.25,\r\n            \"wantAmount\": 1.0,\r\n            \"stock\": 2860\r\n          },\r\n          {\r\n            \"haveAmount\": 1.1,\r\n            \"wantAmount\": 1.0,\r\n            \"stock\": 2541\r\n          },\r\n          {\r\n            \"haveAmount\": 1.08,\r\n            \"wantAmount\": 1.0,\r\n            \"stock\": 65\r\n          },\r\n          {\r\n            \"haveAmount\": 1.0,\r\n            \"wantAmount\": 1.0,\r\n            \"stock\": 12\r\n          },\r\n          {\r\n            \"haveAmount\": 1.0,\r\n            \"wantAmount\": 1.17,\r\n            \"stock\": 1226\r\n          },\r\n          {\r\n            \"haveAmount\": 1.0,\r\n            \"wantAmount\": 1.17,\r\n            \"stock\": 9420\r\n          }\r\n        ],\r\n        \"competingTrades\": [\r\n          {\r\n            \"haveAmount\": 4.0,\r\n            \"wantAmount\": 1.0,\r\n            \"stock\": 1\r\n          },\r\n          {\r\n            \"haveAmount\": 15.0,\r\n            \"wantAmount\": 1.0,\r\n            \"stock\": 80\r\n          },\r\n          {\r\n            \"haveAmount\": 7.0,\r\n            \"wantAmount\": 1.0,\r\n            \"stock\": 1\r\n          },\r\n          {\r\n            \"haveAmount\": 20.0,\r\n            \"wantAmount\": 1.0,\r\n            \"stock\": 6\r\n          },\r\n          {\r\n            \"haveAmount\": 25.0,\r\n            \"wantAmount\": 1.0,\r\n            \"stock\": 6\r\n          },\r\n          {\r\n            \"haveAmount\": 25.0,\r\n            \"wantAmount\": 1.0,\r\n            \"stock\": 22\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n\r\n// 1) Flatten logic: create rows for first offer and first competing\r\nfunction flattenExchanges(pData) {\r\n  let rowId = 1;\r\n  const rows = [];\r\n  pData.exchanges.forEach((exchange) => {\r\n    const { haveCurrency, wantCurrency, lastUpdated, offers, competingTrades } = exchange;\r\n\r\n    // first offer\r\n    if (offers && offers.length > 0) {\r\n      const firstOffer = offers[0];\r\n      rows.push({\r\n        id: rowId++,\r\n        rowType: \"offer\",\r\n        haveCurrency,\r\n        wantCurrency,\r\n        lastUpdated,\r\n        haveAmount: firstOffer.wantAmount,\r\n        wantAmount: firstOffer.haveAmount,\r\n        stock: firstOffer.stock\r\n      });\r\n    }\r\n    // first competing\r\n    if (competingTrades && competingTrades.length > 0) {\r\n      const firstCompeting = competingTrades[0];\r\n      rows.push({\r\n        id: rowId++,\r\n        rowType: \"competing\",\r\n        haveCurrency,\r\n        wantCurrency,\r\n        lastUpdated,\r\n        haveAmount: firstCompeting.wantAmount,\r\n        wantAmount: firstCompeting.haveAmount,\r\n        stock: firstCompeting.stock\r\n      });\r\n    }\r\n  });\r\n  return rows;\r\n}\r\n\r\nexport default function PriceDataGrid() {\r\n  // State for row data and the icon map\r\n  const [rows, setRows] = useState([]);\r\n  const [currencyIconMap, setCurrencyIconMap] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // 2) On mount, fetch currencyOverview.json from public/\r\n  //    Then build the icon map and flatten the local priceData\r\n  useEffect(() => {\r\n    fetch(\"/currencyOverview.json\")\r\n      .then((res) => {\r\n        if (!res.ok) {\r\n          throw new Error(`Failed to fetch /currencyOverview.json: ${res.status}`);\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((currencyJson) => {\r\n        console.log(\"Fetched currencyOverview.json:\", currencyJson);\r\n        // currencyJson should have something like { currencyDetails: [ { name, icon, ... }, ... ] }\r\n        const map = {};\r\n        if (currencyJson.currencyDetails) {\r\n          currencyJson.currencyDetails.forEach((c) => {\r\n            map[c.name] = c.icon;\r\n          });\r\n        }\r\n\r\n        // Flatten your local priceData.exchanges\r\n        const flattened = flattenExchanges(priceData);\r\n\r\n        // Store them in state\r\n        setCurrencyIconMap(map);\r\n        setRows(flattened);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        console.error(\"Error fetching currencyOverview.json:\", err);\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  // 3) Define columns, referencing currencyIconMap in renderCell\r\n  const columns = [\r\n    {\r\n      field: \"haveCurrency\",\r\n      headerName: \"Have Currency\",\r\n      width: 200,\r\n      renderCell: (params) => {\r\n        const currencyName = params.value; // e.g. \"Chaos Orb\"\r\n        const iconUrl = currencyIconMap[currencyName]; // look up the icon\r\n        return (\r\n          <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n            {iconUrl && (\r\n              <img\r\n                src={iconUrl}\r\n                alt={currencyName}\r\n                style={{ width: 24, height: 24, marginRight: 8 }}\r\n              />\r\n            )}\r\n            {currencyName}\r\n          </div>\r\n        );\r\n      }\r\n    },\r\n    { field: \"wantCurrency\", headerName: \"Want Currency\", width: 130 },\r\n    { field: \"lastUpdated\", headerName: \"Last Updated\", width: 180 },\r\n    { field: \"rowType\", headerName: \"Type\", width: 90 },\r\n    { field: \"haveAmount\", headerName: \"Have Amt\", type: \"number\", width: 100 },\r\n    { field: \"wantAmount\", headerName: \"Want Amt\", type: \"number\", width: 100 },\r\n    { field: \"stock\", headerName: \"Stock\", type: \"number\", width: 100 },\r\n    // If you want a 'ninjaPrice' or anything else, just add it here\r\n  ];\r\n\r\n  if (loading) {\r\n    return <div>Loading Data...</div>;\r\n  }\r\n\r\n  return (\r\n    <div style={{ height: 800, width: \"100%\", marginTop: \"1rem\" }}>\r\n      <DataGrid\r\n        rows={rows}\r\n        columns={columns}\r\n        pageSize={10}\r\n        rowsPerPageOptions={[5, 10, 25]}\r\n        disableSelectionOnClick\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}