{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst getCategory_1 = __importDefault(require(\"../../func/getCategory\"));\nconst PoeWatch_1 = __importDefault(require(\"../../../../AbstractClass/PoeWatch\"));\n/**\n * Subclass of PoeWatch for accessing armour data.\n */\nclass ArmourModule extends PoeWatch_1.default {\n  /**\n   * Creates a new instance of ArmourModule.\n   * @param {string} league - The league from which the data will be fetched.\n   */\n  constructor(league) {\n    const type = \"armour\";\n    super(league, type);\n  }\n  /**\n   * Retrieves category data for armour.\n   * @async\n   * @param categoryName - The name of the category to retrieve.\n   * *  Possible values: \"chest\", \"bodyarmours\", \"shield\", \"boots\", \"gloves\", \"shields\", \"helmets\", \"quiver\".\n   * @returns - A Promise containing data for the specified category.\n   * @throws - Throws errors encountered while fetching data.\n   */\n  async getCategory(categoryName) {\n    try {\n      return await (0, getCategory_1.default)(this.league, this.type, categoryName);\n    } catch (error) {\n      throw new Error(`Error fetching Accessory data: ${error.message}`);\n    }\n  }\n}\nexports.default = ArmourModule;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","getCategory_1","require","PoeWatch_1","ArmourModule","default","constructor","league","type","getCategory","categoryName","error","Error","message"],"sources":["C:/Users/jpitt/VSCode/faustus-price-checker/web-ui/node_modules/poe-api-manager/dist/lib/modules/poe.watch/allModules/subModules/ArmourModule.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst getCategory_1 = __importDefault(require(\"../../func/getCategory\"));\nconst PoeWatch_1 = __importDefault(require(\"../../../../AbstractClass/PoeWatch\"));\n/**\n * Subclass of PoeWatch for accessing armour data.\n */\nclass ArmourModule extends PoeWatch_1.default {\n    /**\n     * Creates a new instance of ArmourModule.\n     * @param {string} league - The league from which the data will be fetched.\n     */\n    constructor(league) {\n        const type = \"armour\";\n        super(league, type);\n    }\n    /**\n     * Retrieves category data for armour.\n     * @async\n     * @param categoryName - The name of the category to retrieve.\n     * *  Possible values: \"chest\", \"bodyarmours\", \"shield\", \"boots\", \"gloves\", \"shields\", \"helmets\", \"quiver\".\n     * @returns - A Promise containing data for the specified category.\n     * @throws - Throws errors encountered while fetching data.\n     */\n    async getCategory(categoryName) {\n        try {\n            return await (0, getCategory_1.default)(this.league, this.type, categoryName);\n        }\n        catch (error) {\n            throw new Error(`Error fetching Accessory data: ${error.message}`);\n        }\n    }\n}\nexports.default = ArmourModule;\n"],"mappings":"AAAA,YAAY;;AACZ,IAAIA,eAAe,GAAI,IAAI,IAAI,IAAI,CAACA,eAAe,IAAK,UAAUC,GAAG,EAAE;EACnE,OAAQA,GAAG,IAAIA,GAAG,CAACC,UAAU,GAAID,GAAG,GAAG;IAAE,SAAS,EAAEA;EAAI,CAAC;AAC7D,CAAC;AACDE,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D,MAAMC,aAAa,GAAGP,eAAe,CAACQ,OAAO,CAAC,wBAAwB,CAAC,CAAC;AACxE,MAAMC,UAAU,GAAGT,eAAe,CAACQ,OAAO,CAAC,oCAAoC,CAAC,CAAC;AACjF;AACA;AACA;AACA,MAAME,YAAY,SAASD,UAAU,CAACE,OAAO,CAAC;EAC1C;AACJ;AACA;AACA;EACIC,WAAWA,CAACC,MAAM,EAAE;IAChB,MAAMC,IAAI,GAAG,QAAQ;IACrB,KAAK,CAACD,MAAM,EAAEC,IAAI,CAAC;EACvB;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI,MAAMC,WAAWA,CAACC,YAAY,EAAE;IAC5B,IAAI;MACA,OAAO,MAAM,CAAC,CAAC,EAAET,aAAa,CAACI,OAAO,EAAE,IAAI,CAACE,MAAM,EAAE,IAAI,CAACC,IAAI,EAAEE,YAAY,CAAC;IACjF,CAAC,CACD,OAAOC,KAAK,EAAE;MACV,MAAM,IAAIC,KAAK,CAAC,kCAAkCD,KAAK,CAACE,OAAO,EAAE,CAAC;IACtE;EACJ;AACJ;AACAd,OAAO,CAACM,OAAO,GAAGD,YAAY","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}