{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jpitt\\\\VSCode\\\\faustus-price-checker\\\\web-ui\\\\src\\\\components\\\\HeaderBar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport { Box, CircularProgress, Chip } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction HeaderBar() {\n  _s();\n  const [divineOrbPrice, setDivineOrbPrice] = useState(null);\n  const [isActive, setIsActive] = useState(false);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const checkSiteStatus = async () => {\n      try {\n        const response = await fetch(\"/faustus-price-checker/currencyOverview.json\");\n        const data = await response.json();\n\n        // Extract created date\n        const createdDate = data.created ? new Date(data.created) : null;\n\n        // Extract Divine Orb price from JSON\n        const divineOrb = data.lines.find(line => line.currencyTypeName === \"Divine Orb\");\n        const price = divineOrb ? divineOrb.chaosEquivalent : \"N/A\";\n        setDivineOrbPrice(price);\n\n        // Convert created date to PST\n        const createdDatePST = createdDate ? new Date(createdDate.toLocaleString(\"en-US\", {\n          timeZone: \"America/Los_Angeles\"\n        })) : null;\n\n        // Determine if the site is active (within last 10 minutes)\n        const now = new Date();\n        const tenMinutesAgo = new Date(now.getTime() - 10 * 60 * 1000);\n        setIsActive(createdDatePST > tenMinutesAgo);\n        setLoading(false);\n      } catch (error) {\n        console.error(\"Error checking site status:\", error);\n        setLoading(false);\n      }\n    };\n    checkSiteStatus();\n\n    // Poll every 15 seconds\n    const intervalId = setInterval(checkSiteStatus, 15000);\n\n    // Cleanup on unmount\n    return () => clearInterval(intervalId);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AppBar, {\n    position: \"static\",\n    children: /*#__PURE__*/_jsxDEV(Toolbar, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        sx: {\n          flexGrow: 1\n        },\n        children: \"Faustus Price Checker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n        color: \"inherit\",\n        size: 24\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [divineOrbPrice && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            marginRight: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: [\"Divine Orb Price: \", divineOrbPrice, \" Chaos Orbs\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Chip, {\n          label: isActive ? \"Active\" : \"Inactive\",\n          color: isActive ? \"success\" : \"error\",\n          sx: {\n            fontWeight: \"bold\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(HeaderBar, \"fahDQwN5GuyrO8STlHiLeUWLEOs=\");\n_c = HeaderBar;\nexport default HeaderBar;\nvar _c;\n$RefreshReg$(_c, \"HeaderBar\");","map":{"version":3,"names":["React","useEffect","useState","AppBar","Toolbar","Typography","Box","CircularProgress","Chip","jsxDEV","_jsxDEV","Fragment","_Fragment","HeaderBar","_s","divineOrbPrice","setDivineOrbPrice","isActive","setIsActive","loading","setLoading","checkSiteStatus","response","fetch","data","json","createdDate","created","Date","divineOrb","lines","find","line","currencyTypeName","price","chaosEquivalent","createdDatePST","toLocaleString","timeZone","now","tenMinutesAgo","getTime","error","console","intervalId","setInterval","clearInterval","position","children","variant","sx","flexGrow","fileName","_jsxFileName","lineNumber","columnNumber","color","size","marginRight","label","fontWeight","_c","$RefreshReg$"],"sources":["C:/Users/jpitt/VSCode/faustus-price-checker/web-ui/src/components/HeaderBar.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { Box, CircularProgress, Chip } from \"@mui/material\";\r\n\r\nfunction HeaderBar() {\r\n  const [divineOrbPrice, setDivineOrbPrice] = useState(null);\r\n  const [isActive, setIsActive] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const checkSiteStatus = async () => {\r\n      try {\r\n        const response = await fetch(\"/faustus-price-checker/currencyOverview.json\");\r\n        const data = await response.json();\r\n\r\n        // Extract created date\r\n        const createdDate = data.created ? new Date(data.created) : null;\r\n\r\n        // Extract Divine Orb price from JSON\r\n        const divineOrb = data.lines.find(\r\n          (line) => line.currencyTypeName === \"Divine Orb\"\r\n        );\r\n        const price = divineOrb ? divineOrb.chaosEquivalent : \"N/A\";\r\n        setDivineOrbPrice(price);\r\n\r\n        // Convert created date to PST\r\n        const createdDatePST = createdDate\r\n          ? new Date(createdDate.toLocaleString(\"en-US\", { timeZone: \"America/Los_Angeles\" }))\r\n          : null;\r\n\r\n        // Determine if the site is active (within last 10 minutes)\r\n        const now = new Date();\r\n        const tenMinutesAgo = new Date(now.getTime() - 10 * 60 * 1000);\r\n        setIsActive(createdDatePST > tenMinutesAgo);\r\n\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error(\"Error checking site status:\", error);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    checkSiteStatus();\r\n\r\n    // Poll every 15 seconds\r\n    const intervalId = setInterval(checkSiteStatus, 15000);\r\n\r\n    // Cleanup on unmount\r\n    return () => clearInterval(intervalId);\r\n  }, []);\r\n\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Toolbar>\r\n        <Typography variant=\"h6\" sx={{ flexGrow: 1 }}>\r\n          Faustus Price Checker\r\n        </Typography>\r\n\r\n        {loading ? (\r\n          <CircularProgress color=\"inherit\" size={24} />\r\n        ) : (\r\n          <>\r\n            {divineOrbPrice && (\r\n              <Box sx={{ marginRight: 2 }}>\r\n                <Typography variant=\"body1\">\r\n                  Divine Orb Price: {divineOrbPrice} Chaos Orbs\r\n                </Typography>\r\n              </Box>\r\n            )}\r\n            <Chip\r\n              label={isActive ? \"Active\" : \"Inactive\"}\r\n              color={isActive ? \"success\" : \"error\"}\r\n              sx={{ fontWeight: \"bold\" }}\r\n            />\r\n          </>\r\n        )}\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n\r\nexport default HeaderBar;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAASC,GAAG,EAAEC,gBAAgB,EAAEC,IAAI,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE5D,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACe,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMoB,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8CAA8C,CAAC;QAC5E,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;;QAElC;QACA,MAAMC,WAAW,GAAGF,IAAI,CAACG,OAAO,GAAG,IAAIC,IAAI,CAACJ,IAAI,CAACG,OAAO,CAAC,GAAG,IAAI;;QAEhE;QACA,MAAME,SAAS,GAAGL,IAAI,CAACM,KAAK,CAACC,IAAI,CAC9BC,IAAI,IAAKA,IAAI,CAACC,gBAAgB,KAAK,YACtC,CAAC;QACD,MAAMC,KAAK,GAAGL,SAAS,GAAGA,SAAS,CAACM,eAAe,GAAG,KAAK;QAC3DnB,iBAAiB,CAACkB,KAAK,CAAC;;QAExB;QACA,MAAME,cAAc,GAAGV,WAAW,GAC9B,IAAIE,IAAI,CAACF,WAAW,CAACW,cAAc,CAAC,OAAO,EAAE;UAAEC,QAAQ,EAAE;QAAsB,CAAC,CAAC,CAAC,GAClF,IAAI;;QAER;QACA,MAAMC,GAAG,GAAG,IAAIX,IAAI,CAAC,CAAC;QACtB,MAAMY,aAAa,GAAG,IAAIZ,IAAI,CAACW,GAAG,CAACE,OAAO,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC;QAC9DvB,WAAW,CAACkB,cAAc,GAAGI,aAAa,CAAC;QAE3CpB,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC,OAAOsB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;QACnDtB,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDC,eAAe,CAAC,CAAC;;IAEjB;IACA,MAAMuB,UAAU,GAAGC,WAAW,CAACxB,eAAe,EAAE,KAAK,CAAC;;IAEtD;IACA,OAAO,MAAMyB,aAAa,CAACF,UAAU,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACElC,OAAA,CAACP,MAAM;IAAC4C,QAAQ,EAAC,QAAQ;IAAAC,QAAA,eACvBtC,OAAA,CAACN,OAAO;MAAA4C,QAAA,gBACNtC,OAAA,CAACL,UAAU;QAAC4C,OAAO,EAAC,IAAI;QAACC,EAAE,EAAE;UAAEC,QAAQ,EAAE;QAAE,CAAE;QAAAH,QAAA,EAAC;MAE9C;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,EAEZpC,OAAO,gBACNT,OAAA,CAACH,gBAAgB;QAACiD,KAAK,EAAC,SAAS;QAACC,IAAI,EAAE;MAAG;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAE9C7C,OAAA,CAAAE,SAAA;QAAAoC,QAAA,GACGjC,cAAc,iBACbL,OAAA,CAACJ,GAAG;UAAC4C,EAAE,EAAE;YAAEQ,WAAW,EAAE;UAAE,CAAE;UAAAV,QAAA,eAC1BtC,OAAA,CAACL,UAAU;YAAC4C,OAAO,EAAC,OAAO;YAAAD,QAAA,GAAC,oBACR,EAACjC,cAAc,EAAC,aACpC;UAAA;YAAAqC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV,CACN,eACD7C,OAAA,CAACF,IAAI;UACHmD,KAAK,EAAE1C,QAAQ,GAAG,QAAQ,GAAG,UAAW;UACxCuC,KAAK,EAAEvC,QAAQ,GAAG,SAAS,GAAG,OAAQ;UACtCiC,EAAE,EAAE;YAAEU,UAAU,EAAE;UAAO;QAAE;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5B,CAAC;MAAA,eACF,CACH;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACM;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEb;AAACzC,EAAA,CA3EQD,SAAS;AAAAgD,EAAA,GAAThD,SAAS;AA6ElB,eAAeA,SAAS;AAAC,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}