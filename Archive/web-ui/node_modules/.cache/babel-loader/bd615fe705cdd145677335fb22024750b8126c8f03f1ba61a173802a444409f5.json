{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jpitt\\\\VSCode\\\\faustus-price-checker\\\\web-ui\\\\src\\\\components\\\\HeaderBar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport { Box, CircularProgress, Chip, IconButton } from \"@mui/material\";\nimport RefreshIcon from \"@mui/icons-material/Refresh\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction HeaderBar() {\n  _s();\n  const [divineOrbPrice, setDivineOrbPrice] = useState(null);\n  const [isActive, setIsActive] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [lastCreated, setLastCreated] = useState(null); // Track last created time\n\n  // Function to fetch the latest JSON and update state\n  const checkSiteStatus = async () => {\n    try {\n      const response = await fetch(\"/faustus-price-checker/currencyOverview.json\");\n      const data = await response.json();\n\n      // Extract the \"created\" timestamp\n      const createdDate = data.created ? new Date(data.created) : null;\n\n      // Extract Divine Orb price\n      const divineOrb = data.lines.find(line => line.currencyTypeName === \"Divine Orb\");\n      const price = divineOrb ? divineOrb.chaosEquivalent : \"N/A\";\n      setDivineOrbPrice(price);\n\n      // Convert created date to PST\n      const createdDatePST = createdDate ? new Date(createdDate.toLocaleString(\"en-US\", {\n        timeZone: \"America/Los_Angeles\"\n      })) : null;\n\n      // Determine if the site is \"active\" (created within the last 10 minutes)\n      const now = new Date();\n      const tenMinutesAgo = new Date(now.getTime() - 10 * 60 * 1000);\n      const isNowActive = createdDatePST > tenMinutesAgo;\n\n      // Update state only if the created date has changed\n      if (lastCreated !== createdDatePST) {\n        setIsActive(isNowActive);\n        setLastCreated(createdDatePST);\n      }\n      setLoading(false);\n    } catch (error) {\n      console.error(\"Error checking site status:\", error);\n      setLoading(false);\n    }\n  };\n\n  // Auto-refresh every 15 seconds\n  useEffect(() => {\n    checkSiteStatus(); // Fetch immediately on mount\n\n    const intervalId = setInterval(checkSiteStatus, 15000); // Poll every 15 sec\n\n    return () => clearInterval(intervalId); // Cleanup interval on unmount\n  }, [lastCreated]); // Runs whenever lastCreated changes\n\n  return /*#__PURE__*/_jsxDEV(AppBar, {\n    position: \"static\",\n    children: /*#__PURE__*/_jsxDEV(Toolbar, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        sx: {\n          flexGrow: 1\n        },\n        children: \"Faustus Price Checker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n        color: \"inherit\",\n        size: 24\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [divineOrbPrice && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            marginRight: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: [\"Divine Orb Price: \", divineOrbPrice, \" Chaos Orbs\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Chip, {\n          label: isActive ? \"Active\" : \"Inactive\",\n          color: isActive ? \"success\" : \"error\",\n          sx: {\n            fontWeight: \"bold\",\n            marginRight: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          color: \"inherit\",\n          onClick: checkSiteStatus,\n          children: /*#__PURE__*/_jsxDEV(RefreshIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(HeaderBar, \"7Yj3Xk2NhzoB7xwJ5GOgwcvA/fM=\");\n_c = HeaderBar;\nexport default HeaderBar;\nvar _c;\n$RefreshReg$(_c, \"HeaderBar\");","map":{"version":3,"names":["React","useEffect","useState","AppBar","Toolbar","Typography","Box","CircularProgress","Chip","IconButton","RefreshIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","HeaderBar","_s","divineOrbPrice","setDivineOrbPrice","isActive","setIsActive","loading","setLoading","lastCreated","setLastCreated","checkSiteStatus","response","fetch","data","json","createdDate","created","Date","divineOrb","lines","find","line","currencyTypeName","price","chaosEquivalent","createdDatePST","toLocaleString","timeZone","now","tenMinutesAgo","getTime","isNowActive","error","console","intervalId","setInterval","clearInterval","position","children","variant","sx","flexGrow","fileName","_jsxFileName","lineNumber","columnNumber","color","size","marginRight","label","fontWeight","onClick","_c","$RefreshReg$"],"sources":["C:/Users/jpitt/VSCode/faustus-price-checker/web-ui/src/components/HeaderBar.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { Box, CircularProgress, Chip, IconButton } from \"@mui/material\";\r\nimport RefreshIcon from \"@mui/icons-material/Refresh\";\r\n\r\nfunction HeaderBar() {\r\n  const [divineOrbPrice, setDivineOrbPrice] = useState(null);\r\n  const [isActive, setIsActive] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const [lastCreated, setLastCreated] = useState(null); // Track last created time\r\n\r\n  // Function to fetch the latest JSON and update state\r\n  const checkSiteStatus = async () => {\r\n    try {\r\n      const response = await fetch(\"/faustus-price-checker/currencyOverview.json\");\r\n      const data = await response.json();\r\n\r\n      // Extract the \"created\" timestamp\r\n      const createdDate = data.created ? new Date(data.created) : null;\r\n\r\n      // Extract Divine Orb price\r\n      const divineOrb = data.lines.find(\r\n        (line) => line.currencyTypeName === \"Divine Orb\"\r\n      );\r\n      const price = divineOrb ? divineOrb.chaosEquivalent : \"N/A\";\r\n      setDivineOrbPrice(price);\r\n\r\n      // Convert created date to PST\r\n      const createdDatePST = createdDate\r\n        ? new Date(createdDate.toLocaleString(\"en-US\", { timeZone: \"America/Los_Angeles\" }))\r\n        : null;\r\n\r\n      // Determine if the site is \"active\" (created within the last 10 minutes)\r\n      const now = new Date();\r\n      const tenMinutesAgo = new Date(now.getTime() - 10 * 60 * 1000);\r\n      const isNowActive = createdDatePST > tenMinutesAgo;\r\n\r\n      // Update state only if the created date has changed\r\n      if (lastCreated !== createdDatePST) {\r\n        setIsActive(isNowActive);\r\n        setLastCreated(createdDatePST);\r\n      }\r\n\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error(\"Error checking site status:\", error);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Auto-refresh every 15 seconds\r\n  useEffect(() => {\r\n    checkSiteStatus(); // Fetch immediately on mount\r\n\r\n    const intervalId = setInterval(checkSiteStatus, 15000); // Poll every 15 sec\r\n\r\n    return () => clearInterval(intervalId); // Cleanup interval on unmount\r\n  }, [lastCreated]); // Runs whenever lastCreated changes\r\n\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Toolbar>\r\n        <Typography variant=\"h6\" sx={{ flexGrow: 1 }}>\r\n          Faustus Price Checker\r\n        </Typography>\r\n\r\n        {loading ? (\r\n          <CircularProgress color=\"inherit\" size={24} />\r\n        ) : (\r\n          <>\r\n            {divineOrbPrice && (\r\n              <Box sx={{ marginRight: 2 }}>\r\n                <Typography variant=\"body1\">\r\n                  Divine Orb Price: {divineOrbPrice} Chaos Orbs\r\n                </Typography>\r\n              </Box>\r\n            )}\r\n            <Chip\r\n              label={isActive ? \"Active\" : \"Inactive\"}\r\n              color={isActive ? \"success\" : \"error\"}\r\n              sx={{ fontWeight: \"bold\", marginRight: 2 }}\r\n            />\r\n            {/* Manual Refresh Button */}\r\n            <IconButton color=\"inherit\" onClick={checkSiteStatus}>\r\n              <RefreshIcon />\r\n            </IconButton>\r\n          </>\r\n        )}\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n\r\nexport default HeaderBar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}