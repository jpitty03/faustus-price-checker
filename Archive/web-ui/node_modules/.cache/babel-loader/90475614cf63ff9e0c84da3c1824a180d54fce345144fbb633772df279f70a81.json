{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { createSelector } from 'reselect';\nimport { createSelectorMemoized } from \"../../../utils/createSelector.js\";\nimport { gridVisibleColumnDefinitionsSelector } from \"../columns/gridColumnsSelector.js\";\nimport { gridRenderContextSelector } from \"./gridVirtualizationSelectors.js\";\nimport { gridFocusCellSelector } from \"../focus/index.js\";\nimport { gridVisibleRowsSelector } from \"../pagination/index.js\";\nimport { gridRowsLookupSelector } from \"../rows/index.js\";\nconst gridIsFocusedCellOutOfContex = createSelector(gridFocusCellSelector, gridRenderContextSelector, gridVisibleRowsSelector, gridVisibleColumnDefinitionsSelector, gridRowsLookupSelector, (focusedCell, renderContext, currentPage, visibleColumns, rows) => {\n  if (!focusedCell) {\n    return false;\n  }\n  const row = rows[focusedCell.id];\n  if (!row) {\n    return false;\n  }\n  const rowIndex = currentPage.rowToIndexMap.get(row);\n  const columnIndex = visibleColumns.slice(renderContext.firstColumnIndex, renderContext.lastColumnIndex).findIndex(column => column.field === focusedCell.field);\n  const isInRenderContext = rowIndex !== undefined && columnIndex !== -1 && rowIndex >= renderContext.firstRowIndex && rowIndex <= renderContext.lastRowIndex;\n  return !isInRenderContext;\n});\nexport const gridFocusedVirtualCellSelector = createSelectorMemoized(gridIsFocusedCellOutOfContex, gridVisibleColumnDefinitionsSelector, gridVisibleRowsSelector, gridRowsLookupSelector, gridFocusCellSelector, (isFocusedCellOutOfRenderContext, visibleColumns, currentPage, rows, focusedCell) => {\n  if (!isFocusedCellOutOfRenderContext) {\n    return null;\n  }\n  const row = rows[focusedCell.id];\n  if (!row) {\n    return null;\n  }\n  const rowIndex = currentPage.rowToIndexMap.get(row);\n  if (rowIndex === undefined) {\n    return null;\n  }\n  const columnIndex = visibleColumns.findIndex(column => column.field === focusedCell.field);\n  if (columnIndex === -1) {\n    return null;\n  }\n  return _extends({}, focusedCell, {\n    rowIndex,\n    columnIndex\n  });\n});","map":{"version":3,"names":["_extends","createSelector","createSelectorMemoized","gridVisibleColumnDefinitionsSelector","gridRenderContextSelector","gridFocusCellSelector","gridVisibleRowsSelector","gridRowsLookupSelector","gridIsFocusedCellOutOfContex","focusedCell","renderContext","currentPage","visibleColumns","rows","row","id","rowIndex","rowToIndexMap","get","columnIndex","slice","firstColumnIndex","lastColumnIndex","findIndex","column","field","isInRenderContext","undefined","firstRowIndex","lastRowIndex","gridFocusedVirtualCellSelector","isFocusedCellOutOfRenderContext"],"sources":["C:/Users/jpitt/VSCode/faustus-price-checker/web-ui/node_modules/@mui/x-data-grid/hooks/features/virtualization/gridFocusedVirtualCellSelector.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { createSelector } from 'reselect';\nimport { createSelectorMemoized } from \"../../../utils/createSelector.js\";\nimport { gridVisibleColumnDefinitionsSelector } from \"../columns/gridColumnsSelector.js\";\nimport { gridRenderContextSelector } from \"./gridVirtualizationSelectors.js\";\nimport { gridFocusCellSelector } from \"../focus/index.js\";\nimport { gridVisibleRowsSelector } from \"../pagination/index.js\";\nimport { gridRowsLookupSelector } from \"../rows/index.js\";\nconst gridIsFocusedCellOutOfContex = createSelector(gridFocusCellSelector, gridRenderContextSelector, gridVisibleRowsSelector, gridVisibleColumnDefinitionsSelector, gridRowsLookupSelector, (focusedCell, renderContext, currentPage, visibleColumns, rows) => {\n  if (!focusedCell) {\n    return false;\n  }\n  const row = rows[focusedCell.id];\n  if (!row) {\n    return false;\n  }\n  const rowIndex = currentPage.rowToIndexMap.get(row);\n  const columnIndex = visibleColumns.slice(renderContext.firstColumnIndex, renderContext.lastColumnIndex).findIndex(column => column.field === focusedCell.field);\n  const isInRenderContext = rowIndex !== undefined && columnIndex !== -1 && rowIndex >= renderContext.firstRowIndex && rowIndex <= renderContext.lastRowIndex;\n  return !isInRenderContext;\n});\nexport const gridFocusedVirtualCellSelector = createSelectorMemoized(gridIsFocusedCellOutOfContex, gridVisibleColumnDefinitionsSelector, gridVisibleRowsSelector, gridRowsLookupSelector, gridFocusCellSelector, (isFocusedCellOutOfRenderContext, visibleColumns, currentPage, rows, focusedCell) => {\n  if (!isFocusedCellOutOfRenderContext) {\n    return null;\n  }\n  const row = rows[focusedCell.id];\n  if (!row) {\n    return null;\n  }\n  const rowIndex = currentPage.rowToIndexMap.get(row);\n  if (rowIndex === undefined) {\n    return null;\n  }\n  const columnIndex = visibleColumns.findIndex(column => column.field === focusedCell.field);\n  if (columnIndex === -1) {\n    return null;\n  }\n  return _extends({}, focusedCell, {\n    rowIndex,\n    columnIndex\n  });\n});"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,SAASC,cAAc,QAAQ,UAAU;AACzC,SAASC,sBAAsB,QAAQ,kCAAkC;AACzE,SAASC,oCAAoC,QAAQ,mCAAmC;AACxF,SAASC,yBAAyB,QAAQ,kCAAkC;AAC5E,SAASC,qBAAqB,QAAQ,mBAAmB;AACzD,SAASC,uBAAuB,QAAQ,wBAAwB;AAChE,SAASC,sBAAsB,QAAQ,kBAAkB;AACzD,MAAMC,4BAA4B,GAAGP,cAAc,CAACI,qBAAqB,EAAED,yBAAyB,EAAEE,uBAAuB,EAAEH,oCAAoC,EAAEI,sBAAsB,EAAE,CAACE,WAAW,EAAEC,aAAa,EAAEC,WAAW,EAAEC,cAAc,EAAEC,IAAI,KAAK;EAC9P,IAAI,CAACJ,WAAW,EAAE;IAChB,OAAO,KAAK;EACd;EACA,MAAMK,GAAG,GAAGD,IAAI,CAACJ,WAAW,CAACM,EAAE,CAAC;EAChC,IAAI,CAACD,GAAG,EAAE;IACR,OAAO,KAAK;EACd;EACA,MAAME,QAAQ,GAAGL,WAAW,CAACM,aAAa,CAACC,GAAG,CAACJ,GAAG,CAAC;EACnD,MAAMK,WAAW,GAAGP,cAAc,CAACQ,KAAK,CAACV,aAAa,CAACW,gBAAgB,EAAEX,aAAa,CAACY,eAAe,CAAC,CAACC,SAAS,CAACC,MAAM,IAAIA,MAAM,CAACC,KAAK,KAAKhB,WAAW,CAACgB,KAAK,CAAC;EAC/J,MAAMC,iBAAiB,GAAGV,QAAQ,KAAKW,SAAS,IAAIR,WAAW,KAAK,CAAC,CAAC,IAAIH,QAAQ,IAAIN,aAAa,CAACkB,aAAa,IAAIZ,QAAQ,IAAIN,aAAa,CAACmB,YAAY;EAC3J,OAAO,CAACH,iBAAiB;AAC3B,CAAC,CAAC;AACF,OAAO,MAAMI,8BAA8B,GAAG5B,sBAAsB,CAACM,4BAA4B,EAAEL,oCAAoC,EAAEG,uBAAuB,EAAEC,sBAAsB,EAAEF,qBAAqB,EAAE,CAAC0B,+BAA+B,EAAEnB,cAAc,EAAED,WAAW,EAAEE,IAAI,EAAEJ,WAAW,KAAK;EACpS,IAAI,CAACsB,+BAA+B,EAAE;IACpC,OAAO,IAAI;EACb;EACA,MAAMjB,GAAG,GAAGD,IAAI,CAACJ,WAAW,CAACM,EAAE,CAAC;EAChC,IAAI,CAACD,GAAG,EAAE;IACR,OAAO,IAAI;EACb;EACA,MAAME,QAAQ,GAAGL,WAAW,CAACM,aAAa,CAACC,GAAG,CAACJ,GAAG,CAAC;EACnD,IAAIE,QAAQ,KAAKW,SAAS,EAAE;IAC1B,OAAO,IAAI;EACb;EACA,MAAMR,WAAW,GAAGP,cAAc,CAACW,SAAS,CAACC,MAAM,IAAIA,MAAM,CAACC,KAAK,KAAKhB,WAAW,CAACgB,KAAK,CAAC;EAC1F,IAAIN,WAAW,KAAK,CAAC,CAAC,EAAE;IACtB,OAAO,IAAI;EACb;EACA,OAAOnB,QAAQ,CAAC,CAAC,CAAC,EAAES,WAAW,EAAE;IAC/BO,QAAQ;IACRG;EACF,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}