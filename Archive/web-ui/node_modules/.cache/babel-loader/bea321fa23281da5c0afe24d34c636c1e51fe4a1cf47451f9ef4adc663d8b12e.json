{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst fetchData_1 = __importDefault(require(\"./fetchData/fetchData\"));\n/**\n * Fetches league names from the provided URL.\n *\n * This function fetches data from the specified URL which contains information about\n * Path of Exile leagues. It then extracts the names of the leagues from the fetched data\n * and returns them as an array.\n *\n * @returns A Promise that resolves with an array of league names.\n * @throws  If an error occurs during the fetch process or if the response data is empty.\n */\nasync function getLeagues() {\n  const url = \"https://api.poe.watch/leagues\";\n  try {\n    const {\n      data\n    } = await (0, fetchData_1.default)(url);\n    const names = data.map(item => item.name);\n    return names;\n  } catch (error) {\n    throw new Error(\"Error fetching League Names: \".concat(error.message));\n  }\n}\nexports.default = getLeagues;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","fetchData_1","require","getLeagues","url","data","default","names","map","item","name","error","Error","concat","message"],"sources":["C:/Users/jpitt/VSCode/faustus-price-checker/web-ui/node_modules/poe-api-manager/dist/lib/modules/utils/getLeagues.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst fetchData_1 = __importDefault(require(\"./fetchData/fetchData\"));\n/**\n * Fetches league names from the provided URL.\n *\n * This function fetches data from the specified URL which contains information about\n * Path of Exile leagues. It then extracts the names of the leagues from the fetched data\n * and returns them as an array.\n *\n * @returns A Promise that resolves with an array of league names.\n * @throws  If an error occurs during the fetch process or if the response data is empty.\n */\nasync function getLeagues() {\n    const url = \"https://api.poe.watch/leagues\";\n    try {\n        const { data } = await (0, fetchData_1.default)(url);\n        const names = data.map((item) => item.name);\n        return names;\n    }\n    catch (error) {\n        throw new Error(`Error fetching League Names: ${error.message}`);\n    }\n}\nexports.default = getLeagues;\n"],"mappings":"AAAA,YAAY;;AACZ,IAAIA,eAAe,GAAI,IAAI,IAAI,IAAI,CAACA,eAAe,IAAK,UAAUC,GAAG,EAAE;EACnE,OAAQA,GAAG,IAAIA,GAAG,CAACC,UAAU,GAAID,GAAG,GAAG;IAAE,SAAS,EAAEA;EAAI,CAAC;AAC7D,CAAC;AACDE,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D,MAAMC,WAAW,GAAGP,eAAe,CAACQ,OAAO,CAAC,uBAAuB,CAAC,CAAC;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAeC,UAAUA,CAAA,EAAG;EACxB,MAAMC,GAAG,GAAG,+BAA+B;EAC3C,IAAI;IACA,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAM,CAAC,CAAC,EAAEJ,WAAW,CAACK,OAAO,EAAEF,GAAG,CAAC;IACpD,MAAMG,KAAK,GAAGF,IAAI,CAACG,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,CAAC;IAC3C,OAAOH,KAAK;EAChB,CAAC,CACD,OAAOI,KAAK,EAAE;IACV,MAAM,IAAIC,KAAK,iCAAAC,MAAA,CAAiCF,KAAK,CAACG,OAAO,CAAE,CAAC;EACpE;AACJ;AACAf,OAAO,CAACO,OAAO,GAAGH,UAAU","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}