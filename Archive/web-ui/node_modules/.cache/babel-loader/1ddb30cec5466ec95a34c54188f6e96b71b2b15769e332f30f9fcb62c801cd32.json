{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jpitt\\\\VSCode\\\\faustus-price-checker\\\\web-ui\\\\src\\\\components\\\\ColDefs.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// priceGridColumns.js\n\nexport const getColumns = currencyIconMap => [{\n  field: \"haveCurrency\",\n  headerName: \"Have Currency\",\n  width: 200,\n  renderCell: params => {\n    const currencyName = params.value;\n    const amount = params.row.haveAmount;\n    const iconUrl = currencyIconMap[currencyName];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        alignItems: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [amount, \" \", currencyName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 15\n      }, this), iconUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: iconUrl,\n        alt: currencyName,\n        style: {\n          width: 24,\n          height: 24,\n          marginRight: 8\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this);\n  }\n}, {\n  field: \"haveAmount\",\n  headerName: \"Have Amt\",\n  type: \"number\",\n  width: 100\n}, {\n  field: \"wantCurrency\",\n  headerName: \"Want Currency\",\n  width: 200,\n  renderCell: params => {\n    const currencyName = params.value;\n    const iconUrl = currencyIconMap[currencyName];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        alignItems: \"center\"\n      },\n      children: [iconUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: iconUrl,\n        alt: currencyName,\n        style: {\n          width: 24,\n          height: 24,\n          marginRight: 8\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }, this), currencyName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this);\n  }\n}, {\n  field: \"wantAmount\",\n  headerName: \"Want Amt\",\n  type: \"number\",\n  width: 100\n}, {\n  field: \"lastUpdated\",\n  headerName: \"Last Updated\",\n  width: 180,\n  renderCell: params => {\n    const date = new Date(params.value);\n    return date.toLocaleDateString('en-US', {\n      year: '2-digit',\n      month: '2-digit',\n      day: '2-digit',\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit'\n    });\n  }\n}, {\n  field: \"rowType\",\n  headerName: \"Type\",\n  width: 100\n}, {\n  field: \"ninjaPrice\",\n  headerName: \"Ninja Price\",\n  type: \"number\",\n  width: 100\n}, {\n  field: \"stock\",\n  headerName: \"Stock\",\n  type: \"number\",\n  width: 100\n}];","map":{"version":3,"names":["getColumns","currencyIconMap","field","headerName","width","renderCell","params","currencyName","value","amount","row","haveAmount","iconUrl","_jsxDEV","style","display","alignItems","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","height","marginRight","type","date","Date","toLocaleDateString","year","month","day","hour","minute","second"],"sources":["C:/Users/jpitt/VSCode/faustus-price-checker/web-ui/src/components/ColDefs.js"],"sourcesContent":["// priceGridColumns.js\r\n\r\nexport const getColumns = (currencyIconMap) => [\r\n    {\r\n        field: \"haveCurrency\",\r\n        headerName: \"Have Currency\",\r\n        width: 200,\r\n        renderCell: (params) => {\r\n          const currencyName = params.value;\r\n          const amount = params.row.haveAmount;\r\n          const iconUrl = currencyIconMap[currencyName];\r\n          return (\r\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n              <span>{amount} {currencyName}</span>\r\n              {iconUrl && (\r\n                <img\r\n                  src={iconUrl}\r\n                  alt={currencyName}\r\n                  style={{ width: 24, height: 24, marginRight: 8 }}\r\n                />\r\n              )}\r\n            </div>\r\n          );\r\n        }\r\n    },\r\n    {\r\n        field: \"haveAmount\",\r\n        headerName: \"Have Amt\",\r\n        type: \"number\",\r\n        width: 100\r\n    },\r\n    {\r\n        field: \"wantCurrency\",\r\n        headerName: \"Want Currency\",\r\n        width: 200,\r\n        renderCell: (params) => {\r\n            const currencyName = params.value;\r\n            const iconUrl = currencyIconMap[currencyName];\r\n            return (\r\n                <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                    {iconUrl && (\r\n                        <img\r\n                            src={iconUrl}\r\n                            alt={currencyName}\r\n                            style={{ width: 24, height: 24, marginRight: 8 }}\r\n                        />\r\n                    )}\r\n                    {currencyName}\r\n                </div>\r\n            );\r\n        }\r\n    },\r\n    {\r\n        field: \"wantAmount\",\r\n        headerName: \"Want Amt\",\r\n        type: \"number\",\r\n        width: 100\r\n    },\r\n    {\r\n        field: \"lastUpdated\",\r\n        headerName: \"Last Updated\",\r\n        width: 180,\r\n        renderCell: (params) => {\r\n            const date = new Date(params.value);\r\n            return date.toLocaleDateString('en-US', {\r\n              year: '2-digit',\r\n              month: '2-digit',\r\n              day: '2-digit',\r\n              hour: '2-digit',\r\n              minute: '2-digit',\r\n              second: '2-digit'\r\n            });\r\n          }\r\n    },\r\n    {\r\n        field: \"rowType\",\r\n        headerName: \"Type\",\r\n        width: 100\r\n    },\r\n    {\r\n        field: \"ninjaPrice\",\r\n        headerName: \"Ninja Price\",\r\n        type: \"number\",\r\n        width: 100\r\n    },\r\n    {\r\n        field: \"stock\",\r\n        headerName: \"Stock\",\r\n        type: \"number\",\r\n        width: 100\r\n    }\r\n];"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}